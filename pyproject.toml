[tool]
[tool.poetry]
name = "elhub-python-sdk"
version = "0.1.2"
homepage = "https://github.com/bkkas/elhub-python-sdk"
description = "Non official Python SDK for ElHub API."
authors = ["Volte <jesus.condon@eviny.no>"]
readme = "README.md"
license =  "GPL-3.0-only"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "elhub_sdk" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.8.2,<4.0"
black  = "^22.8.0"
isort  = "^5.10.1"
flake8  = "^5.0.4"
mypy = "^0.971"
pytest  = "^7.1.3"
tox  = "^3.26.0"
virtualenv  = "^20.16.5"
pip  = "^22.2.2"
mkdocs  = "^1.3.1"
twine  = "^4.0.1"
bump2version = "^1.0.1"
toml = "^0.10.2"
mkdocstrings  = {extras = ["python-legacy"], version = "^0.19.0"}
mkdocs-material  = "^8.5.3"
flake8-docstrings = "^1.6.0"
pytest-cov  = "^3.0.0"
mkdocs-material-extensions  = "^1.0.3"
mkdocs-autorefs = "^0.4.1"
pre-commit = "^2.20.0"
mkdocs-include-markdown-plugin  = "^3.8.1"
zeep = {extras = ["xmlsec"], version = "^4.1.0"}
python-dotenv = "^0.21.0"


[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
    ]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py38','py39','py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-m 'not integrationtest and not soapuitest'"
markers = [
    "integrationtest",
    "soapuitest"
    ]
