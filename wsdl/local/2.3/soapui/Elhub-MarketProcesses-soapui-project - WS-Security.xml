<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project abortOnError="false" activeEnvironment="Default" id="f9b4588e-7979-446a-8014-3d086caccb20" name="Elhub-MarketProcesses - WS-Security" resourceRoot="" runType="SEQUENTIAL" soapui-version="5.7.0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface anonymous="optional" bindingName="{urn:no:elhub:emif:wsdl:marketprocesses:v2}MarketProcessesSoapBinding" definition="file:/C:/ELHUB/market_wsdl/elhub_wsdl/2.3/wsdl/MarketProcesses%20-%20WS-Security.wsdl" id="cb333994-d83c-4ece-b882-99dc9d959d72" name="MarketProcessesSoapBinding" soapVersion="1_1" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>

    <con:definitionCache type="TEXT" rootPart="file:/C:/ELHUB/market_wsdl/elhub_wsdl/2.3/wsdl/MarketProcesses%20-%20WS-Security.wsdl"><con:part><con:url>file:/C:/ELHUB/market_wsdl/elhub_wsdl/2.3/wsdl/MarketProcesses%20-%20WS-Security.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:tns="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="urn:no:elhub:emif:wsdl:common:v2">
  <wsp1_2:Policy ns1:Id="wss10_x509_certificates_sign_encrypt" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:ns1="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsp1_2:ExactlyOne>
      <wsp1_2:All>
        <ns2:AsymmetricBinding xmlns:ns2="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
          <wsp1_2:Policy>
            <wsp1_2:ExactlyOne>
              <wsp1_2:All>
                <ns2:AlgorithmSuite>
                  <wsp1_2:Policy>
                    <wsp1_2:ExactlyOne>
                      <wsp1_2:All>
                        <ns2:Basic256/>
                      </wsp1_2:All>
                    </wsp1_2:ExactlyOne>
                  </wsp1_2:Policy>
                </ns2:AlgorithmSuite>
                <ns2:IncludeTimestamp/>
                <ns2:InitiatorToken>
                  <wsp1_2:Policy>
                    <wsp1_2:ExactlyOne>
                      <wsp1_2:All>
                        <ns2:X509Token ns2:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
                          <wsp1_2:Policy>
                            <wsp1_2:ExactlyOne>
                              <wsp1_2:All>
                                <ns2:WssX509V3Token10/>
                              </wsp1_2:All>
                            </wsp1_2:ExactlyOne>
                          </wsp1_2:Policy>
                        </ns2:X509Token>
                      </wsp1_2:All>
                    </wsp1_2:ExactlyOne>
                  </wsp1_2:Policy>
                </ns2:InitiatorToken>
                <ns2:Layout>
                  <wsp1_2:Policy>
                    <wsp1_2:ExactlyOne>
                      <wsp1_2:All>
                        <ns2:Strict/>
                      </wsp1_2:All>
                    </wsp1_2:ExactlyOne>
                  </wsp1_2:Policy>
                </ns2:Layout>
                <ns2:OnlySignEntireHeadersAndBody/>
                <ns2:RecipientToken>
                  <wsp1_2:Policy>
                    <wsp1_2:ExactlyOne>
                      <wsp1_2:All>
                        <ns2:X509Token ns2:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never">
                          <wsp1_2:Policy>
                            <wsp1_2:ExactlyOne>
                              <wsp1_2:All>
                                <ns2:WssX509V3Token10/>
                              </wsp1_2:All>
                            </wsp1_2:ExactlyOne>
                          </wsp1_2:Policy>
                        </ns2:X509Token>
                      </wsp1_2:All>
                    </wsp1_2:ExactlyOne>
                  </wsp1_2:Policy>
                </ns2:RecipientToken>
              </wsp1_2:All>
            </wsp1_2:ExactlyOne>
          </wsp1_2:Policy>
        </ns2:AsymmetricBinding>
        <ns3:Wss10 xmlns:ns3="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
          <wsp1_2:Policy>
            <wsp1_2:ExactlyOne>
              <wsp1_2:All>
                <ns3:MustSupportRefKeyIdentifier/>
              </wsp1_2:All>
            </wsp1_2:ExactlyOne>
          </wsp1_2:Policy>
        </ns3:Wss10>
      </wsp1_2:All>
    </wsp1_2:ExactlyOne>
  </wsp1_2:Policy>
  <wsp1_2:Policy ns1:Id="sign_body" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:ns1="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsp1_2:ExactlyOne>
      <wsp1_2:All>
        <ns2:SignedParts xmlns:ns2="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <ns2:Body/>
        </ns2:SignedParts>
      </wsp1_2:All>
    </wsp1_2:ExactlyOne>
  </wsp1_2:Policy>
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="urn:no:elhub:emif:wsdl:marketprocesses:v2" version="2.3" xmlns="http://www.w3.org/2001/XMLSchema">
      <xsd:include schemaLocation="xsd/MarketProcesses.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="RequestStartOfSupplyRequest">
    <wsdl:part name="RequestStartOfSupplyRequest" element="tns:RequestStartOfSupplyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RequestStartOfSupplyResponse"></wsdl:message>
  <wsdl:message name="RequestEndOfSupplyRequest">
    <wsdl:part name="RequestEndOfSupplyRequest" element="tns:RequestEndOfSupplyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RequestEndOfSupplyResponse"></wsdl:message>
  <wsdl:message name="RequestUpdateMasterDataMeteringPointRequest">
    <wsdl:part name="RequestUpdateMasterDataMeteringPointRequest" element="tns:RequestUpdateMasterDataMeteringPointRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RequestUpdateMasterDataMeteringPointResponse"></wsdl:message>
  <wsdl:message name="RequestUpdateCustomerInformationRequest">
    <wsdl:part name="RequestUpdateCustomerInformationRequest" element="tns:RequestUpdateCustomerInformationRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RequestUpdateCustomerInformationResponse"></wsdl:message>
  <wsdl:message name="UpdateThirdPartyAccessRequest">
    <wsdl:part name="UpdateThirdPartyAccessRequest" element="tns:UpdateThirdPartyAccessRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateThirdPartyAccessResponse"></wsdl:message>
  <wsdl:message name="RejectStartOfSupplyRequest">
    <wsdl:part name="RejectStartOfSupplyRequest" element="tns:RejectStartOfSupplyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RejectStartOfSupplyResponse"></wsdl:message>
  <wsdl:message name="ElhubSOAPFault">
    <wsdl:part name="ElhubSOAPFault" element="cmn:ElhubSOAPFault"/>
  </wsdl:message>
  <wsdl:portType name="MarketProcesses">
    <wsdl:operation name="RequestStartOfSupply">
      <wsdl:input name="RequestStartOfSupplyRequest" message="tns:RequestStartOfSupplyRequest"></wsdl:input>
      <wsdl:output name="RequestStartOfSupplyResponse" message="tns:RequestStartOfSupplyResponse"></wsdl:output>
      <wsdl:fault name="ElhubSOAPFault" message="tns:ElhubSOAPFault"/>
    </wsdl:operation>
    <wsdl:operation name="RequestEndOfSupply">
      <wsdl:input name="RequestEndOfSupplyRequest" message="tns:RequestEndOfSupplyRequest"></wsdl:input>
      <wsdl:output name="RequestEndOfSupplyResponse" message="tns:RequestEndOfSupplyResponse"></wsdl:output>
      <wsdl:fault name="ElhubSOAPFault" message="tns:ElhubSOAPFault"/>
    </wsdl:operation>
    <wsdl:operation name="RequestUpdateMasterDataMeteringPoint">
      <wsdl:input name="RequestUpdateMasterDataMeteringPointRequest" message="tns:RequestUpdateMasterDataMeteringPointRequest"></wsdl:input>
      <wsdl:output name="RequestUpdateMasterDataMeteringPointResponse" message="tns:RequestUpdateMasterDataMeteringPointResponse"></wsdl:output>
      <wsdl:fault name="ElhubSOAPFault" message="tns:ElhubSOAPFault"/>
    </wsdl:operation>
    <wsdl:operation name="RequestUpdateCustomerInformation">
      <wsdl:input name="RequestUpdateCustomerInformationRequest" message="tns:RequestUpdateCustomerInformationRequest"></wsdl:input>
      <wsdl:output name="RequestUpdateCustomerInformationResponse" message="tns:RequestUpdateCustomerInformationResponse"></wsdl:output>
      <wsdl:fault name="ElhubSOAPFault" message="tns:ElhubSOAPFault"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateThirdPartyAccess">
      <wsdl:input name="UpdateThirdPartyAccessRequest" message="tns:UpdateThirdPartyAccessRequest"></wsdl:input>
      <wsdl:output name="UpdateThirdPartyAccessResponse" message="tns:UpdateThirdPartyAccessResponse"></wsdl:output>
      <wsdl:fault name="ElhubSOAPFault" message="tns:ElhubSOAPFault"/>
    </wsdl:operation>
    <wsdl:operation name="RejectStartOfSupply">
      <wsdl:input name="RejectStartOfSupplyRequest" message="tns:RejectStartOfSupplyRequest"></wsdl:input>
      <wsdl:output name="RejectStartOfSupplyResponse" message="tns:RejectStartOfSupplyResponse"></wsdl:output>
      <wsdl:fault name="ElhubSOAPFault" message="tns:ElhubSOAPFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MarketProcessesSoapBinding" type="tns:MarketProcesses">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <PolicyReference URI="#wss10_x509_certificates_sign_encrypt" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
    <wsdl:operation name="RequestStartOfSupply">
      <soap:operation soapAction="RequestStartOfSupply"/>
      <wsdl:input name="RequestStartOfSupplyRequest">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:input>
      <wsdl:output name="RequestStartOfSupplyResponse">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:output>
      <wsdl:fault name="ElhubSOAPFault">
        <soap:fault name="ElhubSOAPFault" use="literal" URI="#sign_body"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RequestEndOfSupply">
      <soap:operation soapAction="RequestEndOfSupply"/>
      <wsdl:input name="RequestEndOfSupplyRequest">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:input>
      <wsdl:output name="RequestEndOfSupplyResponse">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:output>
      <wsdl:fault name="ElhubSOAPFault">
        <soap:fault name="ElhubSOAPFault" use="literal" URI="#sign_body"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RequestUpdateMasterDataMeteringPoint">
      <soap:operation soapAction="RequestUpdateMasterDataMeteringPoint"/>
      <wsdl:input name="RequestUpdateMasterDataMeteringPointRequest">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:input>
      <wsdl:output name="RequestUpdateMasterDataMeteringPointResponse">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:output>
      <wsdl:fault name="ElhubSOAPFault">
        <soap:fault name="ElhubSOAPFault" use="literal" URI="#sign_body"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RequestUpdateCustomerInformation">
      <soap:operation soapAction="RequestUpdateCustomerInformation"/>
      <wsdl:input name="RequestUpdateCustomerInformationRequest">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:input>
      <wsdl:output name="RequestUpdateCustomerInformationResponse">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:output>
      <wsdl:fault name="ElhubSOAPFault">
        <soap:fault name="ElhubSOAPFault" use="literal" URI="#sign_body"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateThirdPartyAccess">
      <soap:operation soapAction="UpdateThirdPartyAccess"/>
      <wsdl:input name="UpdateThirdPartyAccessRequest">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:input>
      <wsdl:output name="UpdateThirdPartyAccessResponse">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:output>
      <wsdl:fault name="ElhubSOAPFault">
        <soap:fault name="ElhubSOAPFault" use="literal" URI="#sign_body"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RejectStartOfSupply">
      <soap:operation soapAction="RejectStartOfSupply"/>
      <wsdl:input name="RejectStartOfSupplyRequest">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:input>
      <wsdl:output name="RejectStartOfSupplyResponse">
        <soap:body use="literal"/>
        <PolicyReference URI="#sign_body" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
      </wsdl:output>
      <wsdl:fault name="ElhubSOAPFault">
        <soap:fault name="ElhubSOAPFault" use="literal" URI="#sign_body"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MarketProcessesService">
    <wsdl:port name="MarketProcesses" binding="tns:MarketProcessesSoapBinding">
      <soap:address location="http://localhost:1234/WebService/services/MarketProcesses"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\wsdl\xsd\MarketProcesses.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:wsdl:marketprocesses:v2" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.3" xmlns:tns="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:no:elhub:emif:market:RequestStartOfSupply:v2" xmlns:ns2="urn:no:elhub:emif:market:RequestEndOfSupply:v2" xmlns:ns7="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" xmlns:ns8="urn:no:elhub:emif:masterdata:RequestUpdateCustomerInformation:v2" xmlns:ns29="urn:no:elhub:emif:market:RejectStartOfSupply:v2" xmlns:ns24="urn:no:elhub:emif:thirdpartyaccess:UpdateThirdPartyAccess:v2" xmlns:ns28="urn:no:elhub:emif:wsdl:common:v2">
  <xsd:import namespace="urn:no:elhub:emif:market:RequestStartOfSupply:v2" schemaLocation="../../bim/market/RequestStartOfSupply.xsd"/>
  <xsd:import namespace="urn:no:elhub:emif:market:RequestEndOfSupply:v2" schemaLocation="../../bim/market/RequestEndOfSupply.xsd"/>
  <xsd:import namespace="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" schemaLocation="../../bim/masterdata/RequestUpdateMasterDataMeteringPoint.xsd"/>
  <xsd:import namespace="urn:no:elhub:emif:masterdata:RequestUpdateCustomerInformation:v2" schemaLocation="../../bim/masterdata/RequestUpdateCustomerInformation.xsd"/>
  <xsd:import namespace="urn:no:elhub:emif:thirdpartyaccess:UpdateThirdPartyAccess:v2" schemaLocation="../../bim/thirdpartyaccess/UpdateThirdPartyAccess.xsd"/>
  <xsd:import namespace="urn:no:elhub:emif:market:RejectStartOfSupply:v2" schemaLocation="../../bim/market/RejectStartOfSupply.xsd"/>
  <xsd:import namespace="urn:no:elhub:emif:wsdl:common:v2" schemaLocation="common.xsd"/>
  <xsd:element name="RequestStartOfSupplyRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ns1:RequestStartOfSupply" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RequestEndOfSupplyRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ns2:RequestEndOfSupply" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RequestUpdateMasterDataMeteringPointRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ns7:RequestUpdateMasterDataMeteringPoint" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RequestUpdateCustomerInformationRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ns8:RequestUpdateCustomerInformation" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UpdateThirdPartyAccessRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ns24:UpdateThirdPartyAccess" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RejectStartOfSupplyRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ns29:RejectStartOfSupply" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\market\RequestStartOfSupply.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:market:RequestStartOfSupply:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" xmlns:rsm="urn:no:elhub:emif:market:RequestStartOfSupply:v2" xmlns:abie="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
  <xsd:import namespace="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" schemaLocation="../common/Elhub_AggregatedBusinessInformationEntities.xsd"/>
  <xsd:element name="RequestStartOfSupply" type="rsm:RequestStartOfSupply"/>
  <xsd:complexType name="RequestStartOfSupply">
    <xsd:sequence>
      <xsd:element name="Header" type="Elhub_HeaderType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProcessEnergyContext" type="Elhub_EnergyContextType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="PayloadMPEvent" type="Elhub_RequestStartOfSupplyType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\common\Elhub_AggregatedBusinessInformationEntities.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:abie="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" xmlns:bdt="urn:no:elhub:emif:common:BusinessDataType:v2">
  <xsd:import namespace="urn:no:elhub:emif:common:BusinessDataType:v2" schemaLocation="Elhub_BusinessDataType.xsd"/>
  <xsd:complexType name="Elhub_Acknowledgement">
    <xsd:sequence>
      <xsd:element name="StatusType" type="bdt:AcknowledgementStatusType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ResponseReasonType" type="bdt:Elhub_ResponseReasonCodeType" minOccurs="0" maxOccurs="999"/>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="OriginalPayloadReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CollectedDataMeteringPointCharacteristicType">
    <xsd:sequence>
      <xsd:element name="Direction" type="bdt:DirectionType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CollectedDataType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="RegistrationDateTime" type="bdt:Elhub_dateTime9DecType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ObservationPeriodTimeSeriesPeriod" type="abie:Elhub_TimeSeriesPeriodType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ProductIncludedProductCharacteristics" type="abie:Elhub_ProductCharacteristic" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPDetailMeasurementMeteringPointCharacteristic" type="abie:Elhub_CollectedDataMeteringPointCharacteristicType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:choice minOccurs="1" maxOccurs="1">
        <xsd:element name="Observation" type="abie:QuantityMeteredCollect" minOccurs="1" maxOccurs="9999"/>
        <xsd:element name="ProfiledObservation" type="abie:QuantityProfiledCollect" minOccurs="1" maxOccurs="1"/>
        <xsd:element name="AnnualPeriodEstimatedMetrics" type="abie:Elhub_EstimatedAnnualVolumeType" minOccurs="1" maxOccurs="1"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_Communication">
    <xsd:sequence>
      <xsd:element name="CommunicationChannel" type="bdt:CommunicationChannelType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="CompleteNumber" type="bdt:String100Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Description" type="bdt:String100Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ConfirmEndOfSupplyType">
    <xsd:sequence>
      <xsd:element name="EndOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ConfirmStartOfSupplyType">
    <xsd:sequence>
      <xsd:element name="StartOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CustomerPartyEndOfSupplyType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_EndUserIdentifierType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Name" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="GivenName" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FamilyName" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Communication" type="abie:Elhub_Communication" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CustomerPartyNotifyType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_EndUserIdentifierType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Name" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="GivenName" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FamilyName" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ExtendedStorageMeteringValues" type="bdt:Elhub_boolean" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Communication" type="abie:Elhub_Communication" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CustomerPartyStartOfSupplyType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_EndUserIdentifierType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Name" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="GivenName" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FamilyName" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ExtendedStorageMeteringValues" type="bdt:Elhub_boolean" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="NACE_DivisionCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Communication" type="abie:Elhub_Communication" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CustomerPartyType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_EndUserIdentifierType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Name" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="GivenName" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FamilyName" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ExtendedStorageMeteringValues" type="bdt:Elhub_boolean" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Communication" type="abie:Elhub_Communication" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_DetailMeteringPointCharacteristicType">
    <xsd:sequence>
      <xsd:element name="MeteringPointType" type="bdt:Elhub_MeteringPointTypeCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointSubTypeConsumption" type="bdt:ConsumptionCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointSubTypeProduction" type="bdt:ProductionCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeterReadingCharacteristics" type="bdt:Elhub_MeterReadingCharacteristicsType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="SettlementMethodType" type="bdt:Elhub_SettlementMethodCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="PhysicalStatusType" type="bdt:Elhub_PhysicalStatusCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ContractedConnectionCapacityValue" type="bdt:integer9" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="InstalledCapacity" type="bdt:integer9" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeterReadingStartDate" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeterReadingFrequencyDuration" type="bdt:integer4" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Description" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Priority" type="bdt:PriorityCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BlockedForSwitching" type="bdt:Elhub_boolean" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeterReadingOccurrence" type="bdt:MeterReadingOccurrenceType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EndUserIdentificationType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_EndUserIdentifierType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EndUserType">
    <xsd:sequence>
      <xsd:element name="ExtendedStorageMeteringValues" type="bdt:Elhub_boolean" minOccurs="0" maxOccurs="1" fixed="true"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EnergyContextType">
    <xsd:sequence>
      <xsd:element name="EnergyBusinessProcess" type="bdt:Elhub_BusinessProcessType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="EnergyBusinessProcessRole" type="bdt:Elhub_BusinessProcessRoleType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="EnergyIndustryClassification" type="bdt:Elhub_EnergyIndustryClassificationType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EnergyObservationNECSType">
    <xsd:sequence>
      <xsd:element name="GeneratedQuantity" type="bdt:long12" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EnergyPartyType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_EnergyPartyIdentifierType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EstimatedAnnualVolumeDetailType">
    <xsd:sequence>
      <xsd:element name="Total" type="bdt:long12" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="CalculationMethod" type="bdt:CalculationMethod" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EstimatedAnnualVolumeType">
    <xsd:sequence>
      <xsd:element name="Total" type="bdt:long12" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_HeaderType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="DocumentType" type="bdt:Elhub_DocumentNameCodeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Creation" type="bdt:Elhub_dateTime9DecType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="RequestPositiveAcknowledgement" type="bdt:Elhub_boolean" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="PhysicalSenderEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="JuridicalSenderEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="JuridicalRecipientEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_InvoiceeAddressType">
    <xsd:sequence>
      <xsd:element name="AddressType" type="bdt:AddressTypeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="StreetName" type="bdt:String150Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="StreetCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BuildingNumber" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FloorIdentification" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="RoomIdentification" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Postcode" type="bdt:String10Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="CityName" type="bdt:String50Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="CitySubDivisionName" type="bdt:String50Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MunicipalityCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="CountryCode" type="bdt:Elhub_CountryCodeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="AddressFreeForm" type="bdt:String100Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="PostOfficeBox" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="CareOf" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="AttentionOf" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="OnBehalf" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_InvoiceePartyType">
    <xsd:sequence>
      <xsd:element name="Name" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="GivenName" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FamilyName" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeasurementDefinitionType">
    <xsd:sequence>
      <xsd:element name="ProductIncludedProductCharacteristics" type="abie:Elhub_ProductCharacteristic" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Direction" type="bdt:DirectionType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Resolution" type="bdt:ChannelResolutionType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ExcludeFromSettlement" type="bdt:Elhub_boolean" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeterFacilityType">
    <xsd:sequence>
      <xsd:element name="MeterIdentification" type="bdt:String18Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="NumberOfDigits" type="bdt:integer2" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Constant" type="bdt:decimal125" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeterLocation" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeteringGridAreaType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_MeteringGridAreaIdentifierType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeteringPointCharacteristicSimpleType">
    <xsd:sequence>
      <xsd:element name="MeteringPointType" type="bdt:Elhub_MeteringPointTypeCodeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BusinessType" type="bdt:Elhub_BusinessTypeType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeteringPointGeographicalCoordinateType">
    <xsd:sequence>
      <xsd:element name="Latitude" type="bdt:decimal85" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Longitude" type="bdt:decimal85" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeteringPointType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_MeteringPointIdentifierType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeterSearchType">
    <xsd:sequence>
      <xsd:element name="MeterIdentification" type="bdt:String18Type" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MPAddressCadastralType">
    <xsd:sequence>
      <xsd:element name="Gnr" type="bdt:String10Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Bnr" type="bdt:String10Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Snr" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Fnr" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MPAddressSearchType">
    <xsd:sequence>
      <xsd:element name="StreetName" type="bdt:String150Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BuildingNumber" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Postcode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MPAddressType">
    <xsd:sequence>
      <xsd:element name="StreetName" type="bdt:String150Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="StreetCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BuildingNumber" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FloorIdentification" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="RoomIdentification" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Postcode" type="bdt:String10Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="CityName" type="bdt:String50Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="CitySubDivisionName" type="bdt:String50Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MunicipalityCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="CountryCode" type="bdt:Elhub_CountryCodeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="AddressFreeForm" type="bdt:String100Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MPCustomerSearchType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_EndUserIdentifierType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Name" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="GivenName" type="bdt:String80Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FamilyName" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="PreviousEndUser" type="bdt:Elhub_boolean" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_NACEConsType">
    <xsd:sequence>
      <xsd:element name="ConsumptionCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="NACE_DivisionCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_NotifyCustomerInformationType">
    <xsd:sequence>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="StartOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="SnapShotOccurrence" type="bdt:Elhub_dateTime9DecType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_CustomerPartyNotifyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerAddress" type="abie:Elhub_InvoiceeAddressType" minOccurs="0" maxOccurs="2"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_NotifyEndOfSupplyEventType">
    <xsd:sequence>
      <xsd:element name="EndOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ReasonForTransaction" type="bdt:EndReasonType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BalanceSupplierInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_CustomerPartyEndOfSupplyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerAddress" type="abie:Elhub_InvoiceeAddressType" minOccurs="1" maxOccurs="2"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_NotifyMeteringPointCharacteristicsEventType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="StartOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="EndOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MPAddressMeteringPointAddress" type="abie:Elhub_MPAddressType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPPositionMeteringPointGeographicalCoordinate" type="abie:Elhub_MeteringPointGeographicalCoordinateType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPAddressCadastral" type="abie:Elhub_MPAddressCadastralType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BalanceSupplierInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_CustomerPartyNotifyType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringGridAreaUsedDomainLocation" type="abie:Elhub_MeteringGridAreaType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MpDetailMeteringPointCharacteristic" type="abie:Elhub_DetailMeteringPointCharacteristicType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="AnnualPeriodEstimatedMetrics" type="abie:Elhub_EstimatedAnnualVolumeDetailType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringInstallationMeterFacility" type="abie:Elhub_MeterFacilityType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPTaxationProfile" type="abie:Elhub_TaxationProfileMeteringPointType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeasurementDefinition" type="abie:Elhub_MeasurementDefinitionType" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_NotifyStartOfSupplyEventType">
    <xsd:sequence>
      <xsd:element name="StartOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringGridAreaUsedDomainLocation" type="abie:Elhub_MeteringGridAreaType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MPAddressMeteringPointAddress" type="abie:Elhub_MPAddressType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPPositionMeteringPointGeographicalCoordinate" type="abie:Elhub_MeteringPointGeographicalCoordinateType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPAddressCadastral" type="abie:Elhub_MPAddressCadastralType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BalanceSupplierInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_CustomerPartyStartOfSupplyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerAddress" type="abie:Elhub_InvoiceeAddressType" minOccurs="1" maxOccurs="2"/>
      <xsd:element name="MPDetailMeteringPointCharacteristics" type="abie:Elhub_DetailMeteringPointCharacteristicType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="AnnualPeriodEstimatedMetrics" type="abie:Elhub_EstimatedAnnualVolumeDetailType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringInstallationMeterFacility" type="abie:Elhub_MeterFacilityType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPTaxationProfile" type="abie:Elhub_TaxationProfileMeteringPointType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeasurementDefinition" type="abie:Elhub_MeasurementDefinitionType" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_NotifyValidatedDataForBillingEnergyType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="RegistrationDateTime" type="bdt:Elhub_dateTime9DecType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="InsertDateTime" type="bdt:Elhub_dateTime9DecType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="RequestReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ObservationPeriodTimeSeriesPeriod" type="abie:Elhub_TimeSeriesPeriodType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProductIncludedProductCharacteristics" type="abie:Elhub_ProductCharacteristic" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MPDetailMeasurementMeteringPointCharacteristic" type="abie:Elhub_ValidatedDataMeteringPointCharacteristicType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringGridAreaUsedDomainLocation" type="abie:Elhub_MeteringGridAreaType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BalanceResponsibleInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BalanceSupplierInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="0" maxOccurs="1"/>
      <xsd:choice minOccurs="1" maxOccurs="1">
        <xsd:element name="Observation" type="abie:QuantityMeteredNotify" minOccurs="1" maxOccurs="9999"/>
        <xsd:element name="ProfiledObservation" type="abie:QuantityProfiledNotify" minOccurs="1" maxOccurs="1"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ObservationPeriodPriceType">
    <xsd:sequence>
      <xsd:element name="BalanceVolume" type="bdt:decimal153Negative" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BalanceAmount" type="bdt:decimal122Negative" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
    <xsd:attribute name="Sequence" use="required" type="bdt:integer4"/>
  </xsd:complexType>
  <xsd:complexType name="Elhub_PeriodType">
    <xsd:sequence>
      <xsd:element name="Start" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="End" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_PollForData">
    <xsd:sequence>
      <xsd:element name="EnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="EnergyBusinessProcessRole" type="bdt:Elhub_BusinessProcessRoleType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_PriceVolumeCombinationFoReconciliationType">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Currency" type="bdt:Elhub_CurrencyCodeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ReconciliationDate" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="RequestReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ObservationPeriodTimeSeriesPeriod" type="abie:Elhub_TimeSeriesPeriodReconciliationType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProductIncludedProductCharacteristics" type="abie:Elhub_ProductCharacteristic" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MPDetailMeasurementMeteringPointCharacteristic" type="abie:Elhub_ReconciliationMeteringPointCharacteristicType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringGridAreaUsedDomainLocation" type="abie:Elhub_MeteringGridAreaType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BalanceSupplierInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Observation" type="abie:Elhub_ObservationPeriodPriceType" minOccurs="1" maxOccurs="9999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ProductCharacteristic">
    <xsd:sequence>
      <xsd:element name="Identification" type="bdt:Elhub_ProductIdentifierType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="UnitType" type="bdt:Elhub_UnitType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ReconciliationMeteringPointCharacteristicType">
    <xsd:sequence>
      <xsd:element name="Direction" type="bdt:DirectionType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BusinessType" type="bdt:Elhub_BusinessTypeType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RejectEventSingleMPType">
    <xsd:sequence>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ResponseReasonType" type="bdt:Elhub_ResponseReasonCodeType" minOccurs="1" maxOccurs="99"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RejectEventType">
    <xsd:sequence>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ResponseReasonType" type="bdt:Elhub_ResponseReasonCodeType" minOccurs="1" maxOccurs="9999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ReminderType">
    <xsd:sequence>
      <xsd:element name="Period" type="abie:Elhub_PeriodType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestCollectedDataType">
    <xsd:sequence>
      <xsd:element name="ReminderType" type="bdt:ReminderType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Reminder" type="abie:Elhub_ReminderType" minOccurs="1" maxOccurs="9999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestDataFromElhubType">
    <xsd:sequence>
      <xsd:element name="QueryTypeCode" type="bdt:QueryCategoryCodeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="SnapShotOccurrence" type="bdt:Elhub_dateTime9DecType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="BusinessType" type="bdt:Elhub_BusinessTypeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Period" type="abie:Elhub_PeriodType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringGridAreaDomainLocation" type="abie:Elhub_MeteringGridAreaType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestEndOfSupplyType">
    <xsd:sequence>
      <xsd:element name="EndOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ReasonForTransaction" type="bdt:EndReasonType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BalanceSupplierInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_CustomerPartyEndOfSupplyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerAddress" type="abie:Elhub_InvoiceeAddressType" minOccurs="1" maxOccurs="2"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestStartOfSupplyType">
    <xsd:sequence>
      <xsd:element name="StartOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BalanceSupplierInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_CustomerPartyStartOfSupplyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerAddress" type="abie:Elhub_InvoiceeAddressType" minOccurs="1" maxOccurs="2"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestToElhubType">
    <xsd:sequence>
      <xsd:element name="QueryCategory" type="bdt:String18Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Subject" type="bdt:String40Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Request" type="bdt:String300Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestToGridAccessProviderType">
    <xsd:sequence>
      <xsd:element name="QueryCategory" type="bdt:String18Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Subject" type="bdt:String40Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="RequestPublic" type="bdt:String300Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="RequestPrivate" type="bdt:String300Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestUpdateCustomerInformationType">
    <xsd:sequence>
      <xsd:element name="StartOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_CustomerPartyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerAddress" type="abie:Elhub_InvoiceeAddressType" minOccurs="1" maxOccurs="2"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestUpdateMasterDataMeteringPointType">
    <xsd:sequence>
      <xsd:element name="StartOfOccurrence" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Identification" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringGridAreaUsedDomainLocation" type="abie:Elhub_MeteringGridAreaType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPAddressMeteringPointAddress" type="abie:Elhub_MPAddressType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPPositionMeteringPointGeographicalCoordinate" type="abie:Elhub_MeteringPointGeographicalCoordinateType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPAddressCadastral" type="abie:Elhub_MPAddressCadastralType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MpDetailMeteringPointCharacteristic" type="abie:Elhub_DetailMeteringPointCharacteristicType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="AnnualPeriodEstimatedMetrics" type="abie:Elhub_EstimatedAnnualVolumeDetailType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringInstallationMeterFacility" type="abie:Elhub_MeterFacilityType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPTaxationProfile" type="abie:Elhub_TaxationProfileMeteringPointType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeasurementDefinition" type="abie:Elhub_MeasurementDefinitionType" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_RequestUpfrontMeteringPointCharacteristicsType">
    <xsd:sequence>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_EndUserIdentificationType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPAddressMeteringPointAddress" type="abie:Elhub_MPAddressSearchType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringInstallationMeterFacility" type="abie:Elhub_MeterSearchType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ResponseFromElhubType">
    <xsd:sequence>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="QueryCategory" type="bdt:String18Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Subject" type="bdt:String40Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Request" type="bdt:String300Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Feedback" type="bdt:String300Type" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ResponseFromGridAccessProviderType">
    <xsd:sequence>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="QueryCategory" type="bdt:String18Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Subject" type="bdt:String40Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="RequestPublic" type="bdt:String300Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="RequestPrivate" type="bdt:String300Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FeedbackPublic" type="bdt:String300Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FeedbackPrivate" type="bdt:String300Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ResponseUpfrontMeteringPointCharacteristicsType">
    <xsd:sequence>
      <xsd:element name="OriginalBusinessDocumentReference" type="bdt:UUIDType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="SnapShotOccurrence" type="bdt:Elhub_dateTime9DecType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="LastMeterReadingDate" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="DeliveryObligationDate" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="GridAccessProviderInvolvedEnergyParty" type="abie:Elhub_EnergyPartyType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MPAddressMeteringPointAddress" type="abie:Elhub_MPAddressType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPAddressCadastral" type="abie:Elhub_MPAddressCadastralType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeteringGridAreaUsedDomainLocation" type="abie:Elhub_MeteringGridAreaType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MpDetailMeteringPointCharacteristic" type="abie:Elhub_DetailMeteringPointCharacteristicType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringInstallationMeterFacility" type="abie:Elhub_MeterFacilityType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="AnnualPeriodEstimatedMetrics" type="abie:Elhub_EstimatedAnnualVolumeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MPTaxationProfile" type="abie:Elhub_NACEConsType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_TaxationProfileMeteringPointType">
    <xsd:sequence>
      <xsd:element name="VATCode" type="bdt:VATCode" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="EnovaFeeType" type="bdt:EnovaFeeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="EnovaFee" type="bdt:decimal52" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ElFee" type="bdt:decimal52" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ElCertificateShare" type="bdt:decimal52" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ConsumptionCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="NACE_DivisionCode" type="bdt:String10Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_TimeSeriesPeriodReconciliationType">
    <xsd:sequence>
      <xsd:element name="ResolutionDuration" type="bdt:DurationCodeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Start" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="End" type="bdt:Elhub_dateTimeType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_TimeSeriesPeriodType">
    <xsd:sequence>
      <xsd:element name="ResolutionDuration" type="bdt:DurationCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Start" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeterReadingStart" type="bdt:decimal153" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="End" type="bdt:Elhub_dateTimeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="MeterReadingEnd" type="bdt:decimal153" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_UpdateThirdPartyAccessType">
    <xsd:sequence>
      <xsd:element name="UpdateIndicator" type="bdt:AddDeleteUpdate" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="MeteringPointUsedDomainLocation" type="abie:Elhub_MeteringPointType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ConsumerInvolvedCustomerParty" type="abie:Elhub_EndUserType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ValidatedDataMeteringPointCharacteristicType">
    <xsd:sequence>
      <xsd:element name="Direction" type="bdt:DirectionType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="BusinessType" type="bdt:Elhub_BusinessTypeType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QuantityMeteredCollect">
    <xsd:choice>
      <xsd:element name="Metered" type="bdt:MeteredQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Estimated" type="bdt:EstimatedQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Temporary" type="bdt:TemporaryQuantityType" minOccurs="1" maxOccurs="1"/>
    </xsd:choice>
    <xsd:attribute name="Sequence" use="required" type="bdt:integer4"/>
  </xsd:complexType>
  <xsd:complexType name="QuantityMeteredNotify">
    <xsd:choice>
      <xsd:element name="Metered" type="bdt:MeteredQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Estimated" type="bdt:EstimatedQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Temporary" type="bdt:TemporaryQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Calculated" type="bdt:CalculatedQuantityType" minOccurs="1" maxOccurs="1"/>
    </xsd:choice>
    <xsd:attribute name="Sequence" use="required" type="bdt:integer4"/>
  </xsd:complexType>
  <xsd:complexType name="QuantityProfiledCollect">
    <xsd:choice>
      <xsd:element name="Metered" type="bdt:ProfiledMeteredQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Stipulated" type="bdt:ProfiledStipulatedQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Withdrawn" type="bdt:Elhub_boolean" minOccurs="1" maxOccurs="1" fixed="true"/>
      <xsd:element name="MeterIndex" type="bdt:ProfiledMeterIndexType" minOccurs="1" maxOccurs="1"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="QuantityProfiledNotify">
    <xsd:choice>
      <xsd:element name="Metered" type="bdt:ProfiledMeteredQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Estimated" type="bdt:ProfiledEstimatedQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Stipulated" type="bdt:ProfiledStipulatedQuantityType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Withdrawn" type="bdt:Elhub_boolean" minOccurs="1" maxOccurs="1" fixed="true"/>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\common\Elhub_BusinessDataType.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:common:BusinessDataType:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bdt="urn:no:elhub:emif:common:BusinessDataType:v2">
  <xsd:simpleType name="AcknowledgementStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="39"/>
      <xsd:enumeration value="41"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AddDeleteUpdate">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Add"/>
      <xsd:enumeration value="Delete"/>
      <xsd:enumeration value="Update"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AddressTypeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="invoiceadr"/>
      <xsd:enumeration value="postaladr"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BRSIdentification">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="BRS-NO-101"/>
      <xsd:enumeration value="BRS-NO-102"/>
      <xsd:enumeration value="BRS-NO-103"/>
      <xsd:enumeration value="BRS-NO-104"/>
      <xsd:enumeration value="BRS-NO-111"/>
      <xsd:enumeration value="BRS-NO-121"/>
      <xsd:enumeration value="BRS-NO-122"/>
      <xsd:enumeration value="BRS-NO-123"/>
      <xsd:enumeration value="BRS-NO-131"/>
      <xsd:enumeration value="BRS-NO-132"/>
      <xsd:enumeration value="BRS-NO-133"/>
      <xsd:enumeration value="BRS-NO-201"/>
      <xsd:enumeration value="BRS-NO-202"/>
      <xsd:enumeration value="BRS-NO-211"/>
      <xsd:enumeration value="BRS-NO-212"/>
      <xsd:enumeration value="BRS-NO-213"/>
      <xsd:enumeration value="BRS-NO-214"/>
      <xsd:enumeration value="BRS-NO-221"/>
      <xsd:enumeration value="BRS-NO-222"/>
      <xsd:enumeration value="BRS-NO-223"/>
      <xsd:enumeration value="BRS-NO-224"/>
      <xsd:enumeration value="BRS-NO-301"/>
      <xsd:enumeration value="BRS-NO-302"/>
      <xsd:enumeration value="BRS-NO-303"/>
      <xsd:enumeration value="BRS-NO-305"/>
      <xsd:enumeration value="BRS-NO-306"/>
      <xsd:enumeration value="BRS-NO-311"/>
      <xsd:enumeration value="BRS-NO-312"/>
      <xsd:enumeration value="BRS-NO-313"/>
      <xsd:enumeration value="BRS-NO-314"/>
      <xsd:enumeration value="BRS-NO-315"/>
      <xsd:enumeration value="BRS-NO-317"/>
      <xsd:enumeration value="BRS-NO-318"/>
      <xsd:enumeration value="BRS-NO-321"/>
      <xsd:enumeration value="BRS-NO-322"/>
      <xsd:enumeration value="BRS-NO-324"/>
      <xsd:enumeration value="BRS-NO-332"/>
      <xsd:enumeration value="BRS-NO-391"/>
      <xsd:enumeration value="BRS-NO-402"/>
      <xsd:enumeration value="BRS-NO-501"/>
      <xsd:enumeration value="BRS-NO-502"/>
      <xsd:enumeration value="BRS-NO-503"/>
      <xsd:enumeration value="BRS-NO-511"/>
      <xsd:enumeration value="BRS-NO-512"/>
      <xsd:enumeration value="BRS-NO-601"/>
      <xsd:enumeration value="BRS-NO-602"/>
      <xsd:enumeration value="BRS-NO-611"/>
      <xsd:enumeration value="BRS-NO-622"/>
      <xsd:enumeration value="BRS-NO-623"/>
      <xsd:enumeration value="POLL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessTypeCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HP01"/>
      <xsd:enumeration value="HP02"/>
      <xsd:enumeration value="HP03"/>
      <xsd:enumeration value="HP04"/>
      <xsd:enumeration value="LS01"/>
      <xsd:enumeration value="LS02"/>
      <xsd:enumeration value="LS03"/>
      <xsd:enumeration value="LS04"/>
      <xsd:enumeration value="LS05"/>
      <xsd:enumeration value="LS06"/>
      <xsd:enumeration value="LS07"/>
      <xsd:enumeration value="LS08"/>
      <xsd:enumeration value="MP01"/>
      <xsd:enumeration value="MP02"/>
      <xsd:enumeration value="RE01"/>
      <xsd:enumeration value="RE02"/>
      <xsd:enumeration value="RE03"/>
      <xsd:enumeration value="RE04"/>
      <xsd:enumeration value="SE02"/>
      <xsd:enumeration value="SE04"/>
      <xsd:enumeration value="SE05"/>
      <xsd:enumeration value="SE06"/>
      <xsd:enumeration value="SE07"/>
      <xsd:enumeration value="SE08"/>
      <xsd:enumeration value="SE09"/>
      <xsd:enumeration value="SE10"/>
      <xsd:enumeration value="SE11"/>
      <xsd:enumeration value="SE12"/>
      <xsd:enumeration value="SE13"/>
      <xsd:enumeration value="SE14"/>
      <xsd:enumeration value="SE15"/>
      <xsd:enumeration value="SE16"/>
      <xsd:enumeration value="SE17"/>
      <xsd:enumeration value="SE18"/>
      <xsd:enumeration value="SE19"/>
      <xsd:enumeration value="SE20"/>
      <xsd:enumeration value="SE21"/>
      <xsd:enumeration value="SE22"/>
      <xsd:enumeration value="SE23"/>
      <xsd:enumeration value="SE24"/>
      <xsd:enumeration value="SE25"/>
      <xsd:enumeration value="SE26"/>
      <xsd:enumeration value="SE27"/>
      <xsd:enumeration value="SE28"/>
      <xsd:enumeration value="SE29"/>
      <xsd:enumeration value="SE30"/>
      <xsd:enumeration value="SE31"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CalculationMethod">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Automatic"/>
      <xsd:enumeration value="Manual"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ChannelResolutionType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="N"/>
      <xsd:enumeration value="PT15M"/>
      <xsd:enumeration value="PT1H"/>
      <xsd:enumeration value="PT5M"/>
      <xsd:enumeration value="PT60M"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CommunicationChannelType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Email"/>
      <xsd:enumeration value="Mobile"/>
      <xsd:enumeration value="Phone"/>
      <xsd:enumeration value="Telefax"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ConsumptionCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A04"/>
      <xsd:enumeration value="A07"/>
      <xsd:enumeration value="A15"/>
      <xsd:enumeration value="B27"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AD"/>
      <xsd:enumeration value="AE"/>
      <xsd:enumeration value="AF"/>
      <xsd:enumeration value="AG"/>
      <xsd:enumeration value="AI"/>
      <xsd:enumeration value="AL"/>
      <xsd:enumeration value="AM"/>
      <xsd:enumeration value="AO"/>
      <xsd:enumeration value="AQ"/>
      <xsd:enumeration value="AR"/>
      <xsd:enumeration value="AS"/>
      <xsd:enumeration value="AT"/>
      <xsd:enumeration value="AU"/>
      <xsd:enumeration value="AW"/>
      <xsd:enumeration value="AX"/>
      <xsd:enumeration value="AZ"/>
      <xsd:enumeration value="BA"/>
      <xsd:enumeration value="BB"/>
      <xsd:enumeration value="BD"/>
      <xsd:enumeration value="BE"/>
      <xsd:enumeration value="BF"/>
      <xsd:enumeration value="BG"/>
      <xsd:enumeration value="BH"/>
      <xsd:enumeration value="BI"/>
      <xsd:enumeration value="BJ"/>
      <xsd:enumeration value="BL"/>
      <xsd:enumeration value="BM"/>
      <xsd:enumeration value="BN"/>
      <xsd:enumeration value="BO"/>
      <xsd:enumeration value="BQ"/>
      <xsd:enumeration value="BR"/>
      <xsd:enumeration value="BS"/>
      <xsd:enumeration value="BT"/>
      <xsd:enumeration value="BV"/>
      <xsd:enumeration value="BW"/>
      <xsd:enumeration value="BY"/>
      <xsd:enumeration value="BZ"/>
      <xsd:enumeration value="CA"/>
      <xsd:enumeration value="CC"/>
      <xsd:enumeration value="CD"/>
      <xsd:enumeration value="CF"/>
      <xsd:enumeration value="CG"/>
      <xsd:enumeration value="CH"/>
      <xsd:enumeration value="CI"/>
      <xsd:enumeration value="CK"/>
      <xsd:enumeration value="CL"/>
      <xsd:enumeration value="CM"/>
      <xsd:enumeration value="CN"/>
      <xsd:enumeration value="CO"/>
      <xsd:enumeration value="CR"/>
      <xsd:enumeration value="CU"/>
      <xsd:enumeration value="CV"/>
      <xsd:enumeration value="CW"/>
      <xsd:enumeration value="CX"/>
      <xsd:enumeration value="CY"/>
      <xsd:enumeration value="CZ"/>
      <xsd:enumeration value="DE"/>
      <xsd:enumeration value="DJ"/>
      <xsd:enumeration value="DK"/>
      <xsd:enumeration value="DM"/>
      <xsd:enumeration value="DO"/>
      <xsd:enumeration value="DZ"/>
      <xsd:enumeration value="EC"/>
      <xsd:enumeration value="EE"/>
      <xsd:enumeration value="EG"/>
      <xsd:enumeration value="EH"/>
      <xsd:enumeration value="ER"/>
      <xsd:enumeration value="ES"/>
      <xsd:enumeration value="ET"/>
      <xsd:enumeration value="FI"/>
      <xsd:enumeration value="FJ"/>
      <xsd:enumeration value="FK"/>
      <xsd:enumeration value="FM"/>
      <xsd:enumeration value="FO"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="GA"/>
      <xsd:enumeration value="GB"/>
      <xsd:enumeration value="GD"/>
      <xsd:enumeration value="GE"/>
      <xsd:enumeration value="GF"/>
      <xsd:enumeration value="GG"/>
      <xsd:enumeration value="GH"/>
      <xsd:enumeration value="GI"/>
      <xsd:enumeration value="GL"/>
      <xsd:enumeration value="GM"/>
      <xsd:enumeration value="GN"/>
      <xsd:enumeration value="GP"/>
      <xsd:enumeration value="GQ"/>
      <xsd:enumeration value="GR"/>
      <xsd:enumeration value="GS"/>
      <xsd:enumeration value="GT"/>
      <xsd:enumeration value="GU"/>
      <xsd:enumeration value="GW"/>
      <xsd:enumeration value="GY"/>
      <xsd:enumeration value="HK"/>
      <xsd:enumeration value="HM"/>
      <xsd:enumeration value="HN"/>
      <xsd:enumeration value="HR"/>
      <xsd:enumeration value="HT"/>
      <xsd:enumeration value="HU"/>
      <xsd:enumeration value="ID"/>
      <xsd:enumeration value="IE"/>
      <xsd:enumeration value="IL"/>
      <xsd:enumeration value="IM"/>
      <xsd:enumeration value="IN"/>
      <xsd:enumeration value="IO"/>
      <xsd:enumeration value="IQ"/>
      <xsd:enumeration value="IR"/>
      <xsd:enumeration value="IS"/>
      <xsd:enumeration value="IT"/>
      <xsd:enumeration value="JE"/>
      <xsd:enumeration value="JM"/>
      <xsd:enumeration value="JO"/>
      <xsd:enumeration value="JP"/>
      <xsd:enumeration value="KE"/>
      <xsd:enumeration value="KG"/>
      <xsd:enumeration value="KH"/>
      <xsd:enumeration value="KI"/>
      <xsd:enumeration value="KM"/>
      <xsd:enumeration value="KN"/>
      <xsd:enumeration value="KP"/>
      <xsd:enumeration value="KR"/>
      <xsd:enumeration value="KW"/>
      <xsd:enumeration value="KY"/>
      <xsd:enumeration value="KZ"/>
      <xsd:enumeration value="LA"/>
      <xsd:enumeration value="LB"/>
      <xsd:enumeration value="LC"/>
      <xsd:enumeration value="LI"/>
      <xsd:enumeration value="LK"/>
      <xsd:enumeration value="LR"/>
      <xsd:enumeration value="LS"/>
      <xsd:enumeration value="LT"/>
      <xsd:enumeration value="LU"/>
      <xsd:enumeration value="LV"/>
      <xsd:enumeration value="LY"/>
      <xsd:enumeration value="MA"/>
      <xsd:enumeration value="MC"/>
      <xsd:enumeration value="MD"/>
      <xsd:enumeration value="ME"/>
      <xsd:enumeration value="MF"/>
      <xsd:enumeration value="MG"/>
      <xsd:enumeration value="MH"/>
      <xsd:enumeration value="MK"/>
      <xsd:enumeration value="ML"/>
      <xsd:enumeration value="MM"/>
      <xsd:enumeration value="MN"/>
      <xsd:enumeration value="MO"/>
      <xsd:enumeration value="MP"/>
      <xsd:enumeration value="MQ"/>
      <xsd:enumeration value="MR"/>
      <xsd:enumeration value="MS"/>
      <xsd:enumeration value="MT"/>
      <xsd:enumeration value="MU"/>
      <xsd:enumeration value="MV"/>
      <xsd:enumeration value="MW"/>
      <xsd:enumeration value="MX"/>
      <xsd:enumeration value="MY"/>
      <xsd:enumeration value="MZ"/>
      <xsd:enumeration value="NA"/>
      <xsd:enumeration value="NC"/>
      <xsd:enumeration value="NE"/>
      <xsd:enumeration value="NF"/>
      <xsd:enumeration value="NG"/>
      <xsd:enumeration value="NI"/>
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="NO"/>
      <xsd:enumeration value="NP"/>
      <xsd:enumeration value="NR"/>
      <xsd:enumeration value="NU"/>
      <xsd:enumeration value="NZ"/>
      <xsd:enumeration value="OM"/>
      <xsd:enumeration value="PA"/>
      <xsd:enumeration value="PE"/>
      <xsd:enumeration value="PF"/>
      <xsd:enumeration value="PG"/>
      <xsd:enumeration value="PH"/>
      <xsd:enumeration value="PK"/>
      <xsd:enumeration value="PL"/>
      <xsd:enumeration value="PM"/>
      <xsd:enumeration value="PN"/>
      <xsd:enumeration value="PR"/>
      <xsd:enumeration value="PS"/>
      <xsd:enumeration value="PT"/>
      <xsd:enumeration value="PW"/>
      <xsd:enumeration value="PY"/>
      <xsd:enumeration value="QA"/>
      <xsd:enumeration value="RE"/>
      <xsd:enumeration value="RO"/>
      <xsd:enumeration value="RS"/>
      <xsd:enumeration value="RU"/>
      <xsd:enumeration value="RW"/>
      <xsd:enumeration value="SA"/>
      <xsd:enumeration value="SB"/>
      <xsd:enumeration value="SC"/>
      <xsd:enumeration value="SD"/>
      <xsd:enumeration value="SE"/>
      <xsd:enumeration value="SG"/>
      <xsd:enumeration value="SH"/>
      <xsd:enumeration value="SI"/>
      <xsd:enumeration value="SJ"/>
      <xsd:enumeration value="SK"/>
      <xsd:enumeration value="SL"/>
      <xsd:enumeration value="SM"/>
      <xsd:enumeration value="SN"/>
      <xsd:enumeration value="SO"/>
      <xsd:enumeration value="SR"/>
      <xsd:enumeration value="SS"/>
      <xsd:enumeration value="ST"/>
      <xsd:enumeration value="SV"/>
      <xsd:enumeration value="SX"/>
      <xsd:enumeration value="SY"/>
      <xsd:enumeration value="SZ"/>
      <xsd:enumeration value="TC"/>
      <xsd:enumeration value="TD"/>
      <xsd:enumeration value="TF"/>
      <xsd:enumeration value="TG"/>
      <xsd:enumeration value="TH"/>
      <xsd:enumeration value="TJ"/>
      <xsd:enumeration value="TK"/>
      <xsd:enumeration value="TL"/>
      <xsd:enumeration value="TM"/>
      <xsd:enumeration value="TN"/>
      <xsd:enumeration value="TO"/>
      <xsd:enumeration value="TR"/>
      <xsd:enumeration value="TT"/>
      <xsd:enumeration value="TV"/>
      <xsd:enumeration value="TW"/>
      <xsd:enumeration value="TZ"/>
      <xsd:enumeration value="UA"/>
      <xsd:enumeration value="UG"/>
      <xsd:enumeration value="UM"/>
      <xsd:enumeration value="US"/>
      <xsd:enumeration value="UY"/>
      <xsd:enumeration value="UZ"/>
      <xsd:enumeration value="VA"/>
      <xsd:enumeration value="VC"/>
      <xsd:enumeration value="VE"/>
      <xsd:enumeration value="VG"/>
      <xsd:enumeration value="VI"/>
      <xsd:enumeration value="VN"/>
      <xsd:enumeration value="VU"/>
      <xsd:enumeration value="WF"/>
      <xsd:enumeration value="WS"/>
      <xsd:enumeration value="YE"/>
      <xsd:enumeration value="YT"/>
      <xsd:enumeration value="ZA"/>
      <xsd:enumeration value="ZM"/>
      <xsd:enumeration value="ZW"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CurrencyCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DKK"/>
      <xsd:enumeration value="EUR"/>
      <xsd:enumeration value="NOK"/>
      <xsd:enumeration value="SEK"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="decimal122">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="10000000000"/>
      <xsd:minInclusive value="0"/>
      <xsd:totalDigits value="12"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="decimal122Negative">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="10000000000"/>
      <xsd:minExclusive value="-10000000000"/>
      <xsd:totalDigits value="12"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="decimal125">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="5"/>
      <xsd:maxExclusive value="10000000"/>
      <xsd:minInclusive value="0"/>
      <xsd:totalDigits value="12"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="decimal153">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="3"/>
      <xsd:maxExclusive value="1000000000000"/>
      <xsd:minInclusive value="0"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="decimal153Negative">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="3"/>
      <xsd:maxExclusive value="1000000000000"/>
      <xsd:minExclusive value="-1000000000000"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="decimal52">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxInclusive value="100"/>
      <xsd:minInclusive value="0"/>
      <xsd:totalDigits value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="decimal85">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="5"/>
      <xsd:maxExclusive value="1000"/>
      <xsd:minInclusive value="0"/>
      <xsd:totalDigits value="8"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DirectionType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="In"/>
      <xsd:enumeration value="Out"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DurationCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="P1D"/>
      <xsd:enumeration value="P1M"/>
      <xsd:enumeration value="P1Y"/>
      <xsd:enumeration value="PT5M"/>
      <xsd:enumeration value="PT15M"/>
      <xsd:enumeration value="PT1H"/>
      <xsd:enumeration value="PT30M"/>
      <xsd:enumeration value="PT60M"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_boolean">
    <xsd:restriction base="xsd:boolean">
      <xsd:pattern value="true|false"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_BusinessProcessRole">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AG"/>
      <xsd:enumeration value="BSL"/>
      <xsd:enumeration value="DDE"/>
      <xsd:enumeration value="DDK"/>
      <xsd:enumeration value="DDM"/>
      <xsd:enumeration value="DDQ"/>
      <xsd:enumeration value="DDZ"/>
      <xsd:enumeration value="DDX"/>
      <xsd:enumeration value="MDR"/>
      <xsd:enumeration value="PQ"/>
      <xsd:enumeration value="QRY"/>
      <xsd:enumeration value="SLR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_dateTime9DecType">
    <xsd:restriction base="xsd:dateTime">
      <xsd:pattern value="[1-9][0-9]{3}-.+T[^.]+(|\.[0-9]{0,9})(Z|[+\-].+)"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_dateTimeType">
    <xsd:restriction base="xsd:dateTime">
      <xsd:pattern value="[1-9][0-9]{3}-.+T[^.]+(|\.[0-9]{0,3})(Z|[+\-].+)"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_DocumentType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="21"/>
      <xsd:enumeration value="392"/>
      <xsd:enumeration value="406"/>
      <xsd:enumeration value="414"/>
      <xsd:enumeration value="432"/>
      <xsd:enumeration value="E02"/>
      <xsd:enumeration value="E07"/>
      <xsd:enumeration value="E10"/>
      <xsd:enumeration value="E13"/>
      <xsd:enumeration value="E30"/>
      <xsd:enumeration value="E31"/>
      <xsd:enumeration value="E39"/>
      <xsd:enumeration value="E58"/>
      <xsd:enumeration value="E65"/>
      <xsd:enumeration value="E66"/>
      <xsd:enumeration value="E67"/>
      <xsd:enumeration value="ERR"/>
      <xsd:enumeration value="294"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_EnergyIndustryClassificationType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="23"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_MeteringPointTypeCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="E17"/>
      <xsd:enumeration value="E18"/>
      <xsd:enumeration value="E19"/>
      <xsd:enumeration value="E20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_PhysicalStatusCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="E22"/>
      <xsd:enumeration value="E23"/>
      <xsd:enumeration value="E31"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_ProductIdentifierCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="8716867000030"/>
      <xsd:enumeration value="8716867000047"/>
      <xsd:enumeration value="8716867000139"/>
      <xsd:enumeration value="8716867000146"/>
      <xsd:enumeration value="4700000000201"/>
      <xsd:enumeration value="4700000000101"/>
      <xsd:enumeration value="4700000000301"/>
      <xsd:enumeration value="4700000000302"/>
      <xsd:enumeration value="4700000000303"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_ResponseReasonCode">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="E09"/>
      <xsd:enumeration value="EH001"/>
      <xsd:enumeration value="EH002"/>
      <xsd:enumeration value="EH003"/>
      <xsd:enumeration value="EH004"/>
      <xsd:enumeration value="EH005"/>
      <xsd:enumeration value="EH006"/>
      <xsd:enumeration value="EH007"/>
      <xsd:enumeration value="EH008"/>
      <xsd:enumeration value="EH009"/>
      <xsd:enumeration value="EH010"/>
      <xsd:enumeration value="EH011"/>
      <xsd:enumeration value="EH012"/>
      <xsd:enumeration value="EH013"/>
      <xsd:enumeration value="EH014"/>
      <xsd:enumeration value="EH015"/>
      <xsd:enumeration value="EH016"/>
      <xsd:enumeration value="EH017"/>
      <xsd:enumeration value="EH018"/>
      <xsd:enumeration value="EH019"/>
      <xsd:enumeration value="EH020"/>
      <xsd:enumeration value="EH021"/>
      <xsd:enumeration value="EH022"/>
      <xsd:enumeration value="EH023"/>
      <xsd:enumeration value="EH024"/>
      <xsd:enumeration value="EH025"/>
      <xsd:enumeration value="EH026"/>
      <xsd:enumeration value="EH027"/>
      <xsd:enumeration value="EH028"/>
      <xsd:enumeration value="EH029"/>
      <xsd:enumeration value="EH030"/>
      <xsd:enumeration value="EH031"/>
      <xsd:enumeration value="EH032"/>
      <xsd:enumeration value="EH033"/>
      <xsd:enumeration value="EH034"/>
      <xsd:enumeration value="EH035"/>
      <xsd:enumeration value="EH036"/>
      <xsd:enumeration value="EH037"/>
      <xsd:enumeration value="EH038"/>
      <xsd:enumeration value="EH039"/>
      <xsd:enumeration value="EH040"/>
      <xsd:enumeration value="E10"/>
      <xsd:enumeration value="E11"/>
      <xsd:enumeration value="E12"/>
      <xsd:enumeration value="E13"/>
      <xsd:enumeration value="E14"/>
      <xsd:enumeration value="E15"/>
      <xsd:enumeration value="E16"/>
      <xsd:enumeration value="E17"/>
      <xsd:enumeration value="E18"/>
      <xsd:enumeration value="E19"/>
      <xsd:enumeration value="E22"/>
      <xsd:enumeration value="E29"/>
      <xsd:enumeration value="E36"/>
      <xsd:enumeration value="E37"/>
      <xsd:enumeration value="E47"/>
      <xsd:enumeration value="E49"/>
      <xsd:enumeration value="E50"/>
      <xsd:enumeration value="E51"/>
      <xsd:enumeration value="E52"/>
      <xsd:enumeration value="E54"/>
      <xsd:enumeration value="E55"/>
      <xsd:enumeration value="E59"/>
      <xsd:enumeration value="E61"/>
      <xsd:enumeration value="E62"/>
      <xsd:enumeration value="E72"/>
      <xsd:enumeration value="E73"/>
      <xsd:enumeration value="E86"/>
      <xsd:enumeration value="E87"/>
      <xsd:enumeration value="E97"/>
      <xsd:enumeration value="E98"/>
      <xsd:enumeration value="E81"/>
      <xsd:enumeration value="E90"/>
      <xsd:enumeration value="E91"/>
      <xsd:enumeration value="E0H"/>
      <xsd:enumeration value="E0I"/>
      <xsd:enumeration value="E0J"/>
      <xsd:enumeration value="E0K"/>
      <xsd:enumeration value="E0L"/>
      <xsd:enumeration value="E0M"/>
      <xsd:enumeration value="EH041"/>
      <xsd:enumeration value="EH042"/>
      <xsd:enumeration value="EH043"/>
      <xsd:enumeration value="EH044"/>
      <xsd:enumeration value="EH045"/>
      <xsd:enumeration value="EH046"/>
      <xsd:enumeration value="EH047"/>
      <xsd:enumeration value="EH048"/>
      <xsd:enumeration value="EH049"/>
      <xsd:enumeration value="EH050"/>
      <xsd:enumeration value="EH051"/>
      <xsd:enumeration value="EH052"/>
      <xsd:enumeration value="EH053"/>
      <xsd:enumeration value="EH054"/>
      <xsd:enumeration value="EH055"/>
      <xsd:enumeration value="EH056"/>
      <xsd:enumeration value="EH057"/>
      <xsd:enumeration value="EH058"/>
      <xsd:enumeration value="EH059"/>
      <xsd:enumeration value="EH060"/>
      <xsd:enumeration value="EH061"/>
      <xsd:enumeration value="EH062"/>
      <xsd:enumeration value="EH063"/>
      <xsd:enumeration value="EH064"/>
      <xsd:enumeration value="EH065"/>
      <xsd:enumeration value="EH066"/>
      <xsd:enumeration value="EH067"/>
      <xsd:enumeration value="EH068"/>
      <xsd:enumeration value="EH069"/>
      <xsd:enumeration value="EH070"/>
      <xsd:enumeration value="EH071"/>
      <xsd:enumeration value="EH072"/>
      <xsd:enumeration value="EH073"/>
      <xsd:enumeration value="EH074"/>
      <xsd:enumeration value="EH075"/>
      <xsd:enumeration value="EH076"/>
      <xsd:enumeration value="EH077"/>
      <xsd:enumeration value="EH078"/>
      <xsd:enumeration value="EH079"/>
      <xsd:enumeration value="EH080"/>
      <xsd:enumeration value="EH081"/>
      <xsd:enumeration value="EH082"/>
      <xsd:enumeration value="EH083"/>
      <xsd:enumeration value="EH084"/>
      <xsd:enumeration value="EH085"/>
      <xsd:enumeration value="EH086"/>
      <xsd:enumeration value="EH087"/>
      <xsd:enumeration value="EH088"/>
      <xsd:enumeration value="EH089"/>
      <xsd:enumeration value="EH090"/>
      <xsd:enumeration value="EH091"/>
      <xsd:enumeration value="EH092"/>
      <xsd:enumeration value="EH093"/>
      <xsd:enumeration value="EH094"/>
      <xsd:enumeration value="EH095"/>
      <xsd:enumeration value="EH096"/>
      <xsd:enumeration value="EH097"/>
      <xsd:enumeration value="EH098"/>
      <xsd:enumeration value="EH099"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_schemeAgencyIdentifierType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="82"/>
      <xsd:enumeration value="Z01"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_SettlementMethodCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="E01"/>
      <xsd:enumeration value="E02"/>
      <xsd:enumeration value="Z01"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Elhub_UnitType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="kWh"/>
      <xsd:enumeration value="kvarh"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EndReasonType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Z41"/>
      <xsd:enumeration value="Z42"/>
      <xsd:enumeration value="Z44"/>
      <xsd:enumeration value="Z45"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnovaFeeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ConsumptionDependent"/>
      <xsd:enumeration value="Fixed"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EstimatedQualityCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="56"/>
      <xsd:enumeration value="81"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EstimationCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="E001"/>
      <xsd:enumeration value="E002"/>
      <xsd:enumeration value="E003"/>
      <xsd:enumeration value="E004"/>
      <xsd:enumeration value="E005"/>
      <xsd:enumeration value="E006"/>
      <xsd:enumeration value="E007"/>
      <xsd:enumeration value="E008"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="integer2">
    <xsd:restriction base="xsd:int">
      <xsd:maxInclusive value="99"/>
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="integer4">
    <xsd:restriction base="xsd:int">
      <xsd:maxInclusive value="9999"/>
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="integer5">
    <xsd:restriction base="xsd:int">
      <xsd:maxInclusive value="99999"/>
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="integer9">
    <xsd:restriction base="xsd:int">
      <xsd:maxInclusive value="999999999"/>
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="listAgencyIdentifierType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="260"/>
      <xsd:enumeration value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="listAgencyIdentifierType260">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="260"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="listAgencyIdentifierType5">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="listAgencyIdentifierType6">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="listAgencyIdentifierType89">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="89"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="listAgencyIdentifierType89_260">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="260"/>
      <xsd:enumeration value="89"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="listAgencyIdentifierType89_6">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="6"/>
      <xsd:enumeration value="89"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="long12">
    <xsd:restriction base="xsd:long">
      <xsd:maxInclusive value="999999999999"/>
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MeteringPointType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{18}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MeterReadingCharacteristicsCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="E13"/>
      <xsd:enumeration value="E14"/>
      <xsd:enumeration value="E16"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MeterReadingOccurrenceType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PT15M"/>
      <xsd:enumeration value="PT1H"/>
      <xsd:enumeration value="PT5M"/>
      <xsd:enumeration value="PT60M"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MeterReadReasonCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="1"/>
      <xsd:enumeration value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PriorityCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A"/>
      <xsd:enumeration value="B"/>
      <xsd:enumeration value="C"/>
      <xsd:enumeration value="D"/>
      <xsd:enumeration value="P"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProductionCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="B14"/>
      <xsd:enumeration value="B16"/>
      <xsd:enumeration value="B20"/>
      <xsd:enumeration value="Z04"/>
      <xsd:enumeration value="Z05"/>
      <xsd:enumeration value="Z06"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="QueryCategoryCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MVRV"/>
      <xsd:enumeration value="MVTS"/>
      <xsd:enumeration value="MVVT"/>
      <xsd:enumeration value="MDCU"/>
      <xsd:enumeration value="MDMP"/>
      <xsd:enumeration value="STLM"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ReminderType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EAC"/>
      <xsd:enumeration value="IV"/>
      <xsd:enumeration value="MI"/>
      <xsd:enumeration value="PV"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="schemeAgencyIdentifierEICType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="305"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="schemeAgencyIdentifierGS1ElhubType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="89"/>
      <xsd:enumeration value="9"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="schemeAgencyIdentifierGS1Type">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="9"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String100Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String10Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String11Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="11"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String13Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="13"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String150Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="150"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String16Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="16"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String18Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="18"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String300Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="300"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String40Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="40"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String50Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String80Type">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"/>
      <xsd:length value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ValidationCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="V001"/>
      <xsd:enumeration value="V002"/>
      <xsd:enumeration value="V003"/>
      <xsd:enumeration value="V004"/>
      <xsd:enumeration value="V011"/>
      <xsd:enumeration value="V012"/>
      <xsd:enumeration value="V013"/>
      <xsd:enumeration value="V014"/>
      <xsd:enumeration value="V999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ValuesIndicatorType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="B"/>
      <xsd:enumeration value="I"/>
      <xsd:enumeration value="V"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VATCode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="E"/>
      <xsd:enumeration value="S"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="AcknowledgementStatusType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:AcknowledgementStatus">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType6"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="CalculatedQuantityType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153Negative">
        <xsd:attribute name="ImbalanceSettlement" use="optional" fixed="true" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ConsumptionCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:ConsumptionCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType89"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_BusinessProcessRoleType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:Elhub_BusinessProcessRole">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType89_6"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_BusinessProcessType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:BRSIdentification">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType89"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_BusinessTypeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:BusinessTypeCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType89"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CountryCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:CountryCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType5"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_CurrencyCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:CurrencyCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType5"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_DocumentNameCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:Elhub_DocumentType">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EndUserIdentifierType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:String11Type">
        <xsd:attribute name="schemeAgencyIdentifier" use="required" type="bdt:Elhub_schemeAgencyIdentifierType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_EnergyPartyIdentifierType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:String13Type">
        <xsd:attribute name="schemeAgencyIdentifier" use="required" type="bdt:schemeAgencyIdentifierGS1Type"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeteringGridAreaIdentifierType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:String16Type">
        <xsd:attribute name="schemeAgencyIdentifier" use="required" type="bdt:schemeAgencyIdentifierEICType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeteringPointIdentifierType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:MeteringPointType">
        <xsd:attribute name="schemeAgencyIdentifier" use="required" type="bdt:schemeAgencyIdentifierGS1Type"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeteringPointTypeCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:Elhub_MeteringPointTypeCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType260"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_MeterReadingCharacteristicsType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:MeterReadingCharacteristicsCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType260"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_PhysicalStatusCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:Elhub_PhysicalStatusCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType260"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ProductIdentifierType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:Elhub_ProductIdentifierCode">
        <xsd:attribute name="schemeAgencyIdentifier" use="required" type="bdt:schemeAgencyIdentifierGS1ElhubType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_ResponseReasonCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:Elhub_ResponseReasonCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType89_260"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Elhub_SettlementMethodCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:Elhub_SettlementMethodCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType89_260"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EstimatedQuantityType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153">
        <xsd:attribute name="Quality" use="required" type="bdt:EstimatedQualityCodeType"/>
        <xsd:attribute name="ValidationCode" use="required" type="bdt:ValidationCodeType"/>
        <xsd:attribute name="EstimationCode" use="required" type="bdt:EstimationCodeType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MeteredQuantityType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProductionCodeType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:ProductionCode">
        <xsd:attribute name="listAgencyIdentifier" use="required" type="bdt:listAgencyIdentifierType89"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProfiledEstimatedQuantityType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153Negative"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProfiledMeteredQuantityType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153Negative">
        <xsd:attribute name="MeterReadReasonCode" use="required" type="bdt:MeterReadReasonCodeType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProfiledMeterIndexType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153">
        <xsd:attribute name="MeterReadReasonCode" use="required" type="bdt:MeterReadReasonCodeType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProfiledStipulatedQuantityType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153Negative">
        <xsd:attribute name="MeterReadReasonCode" use="required" type="bdt:MeterReadReasonCodeType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TemporaryQuantityType">
    <xsd:simpleContent>
      <xsd:extension base="bdt:decimal153">
        <xsd:attribute name="ValidationCode" use="required" type="bdt:ValidationCodeType"/>
        <xsd:attribute name="EstimationCode" use="optional" type="bdt:EstimationCodeType"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\market\RequestEndOfSupply.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:market:RequestEndOfSupply:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" xmlns:rsm="urn:no:elhub:emif:market:RequestEndOfSupply:v2" xmlns:abie="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
  <xsd:import namespace="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" schemaLocation="../common/Elhub_AggregatedBusinessInformationEntities.xsd"/>
  <xsd:element name="RequestEndOfSupply" type="rsm:RequestEndOfSupply"/>
  <xsd:complexType name="RequestEndOfSupply">
    <xsd:sequence>
      <xsd:element name="Header" type="Elhub_HeaderType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProcessEnergyContext" type="Elhub_EnergyContextType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="PayloadMPEvent" type="Elhub_RequestEndOfSupplyType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\masterdata\RequestUpdateMasterDataMeteringPoint.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" xmlns:rsm="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" xmlns:abie="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
  <xsd:import namespace="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" schemaLocation="../common/Elhub_AggregatedBusinessInformationEntities.xsd"/>
  <xsd:element name="RequestUpdateMasterDataMeteringPoint" type="rsm:RequestUpdateMasterDataMeteringPoint">
    <xsd:unique name="uniquePayloadMasterDataMPEventIdentification">
      <xsd:selector xpath="rsm:PayloadMasterDataMPEvent"/>
      <xsd:field xpath="abie:Identification"/>
    </xsd:unique>
  </xsd:element>
  <xsd:complexType name="RequestUpdateMasterDataMeteringPoint">
    <xsd:sequence>
      <xsd:element name="Header" type="Elhub_HeaderType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProcessEnergyContext" type="Elhub_EnergyContextType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="PayloadMasterDataMPEvent" type="Elhub_RequestUpdateMasterDataMeteringPointType" minOccurs="1" maxOccurs="9999"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\masterdata\RequestUpdateCustomerInformation.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:masterdata:RequestUpdateCustomerInformation:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" xmlns:rsm="urn:no:elhub:emif:masterdata:RequestUpdateCustomerInformation:v2" xmlns:abie="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
  <xsd:import namespace="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" schemaLocation="../common/Elhub_AggregatedBusinessInformationEntities.xsd"/>
  <xsd:element name="RequestUpdateCustomerInformation" type="rsm:RequestUpdateCustomerInformation"/>
  <xsd:complexType name="RequestUpdateCustomerInformation">
    <xsd:sequence>
      <xsd:element name="Header" type="Elhub_HeaderType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProcessEnergyContext" type="Elhub_EnergyContextType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="PayloadMasterDataMPEvent" type="Elhub_RequestUpdateCustomerInformationType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\thirdpartyaccess\UpdateThirdPartyAccess.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:thirdpartyaccess:UpdateThirdPartyAccess:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" xmlns:rsm="urn:no:elhub:emif:thirdpartyaccess:UpdateThirdPartyAccess:v2" xmlns:abie="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
  <xsd:import namespace="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" schemaLocation="../common/Elhub_AggregatedBusinessInformationEntities.xsd"/>
  <xsd:element name="UpdateThirdPartyAccess" type="rsm:UpdateThirdPartyAccess"/>
  <xsd:complexType name="UpdateThirdPartyAccess">
    <xsd:sequence>
      <xsd:element name="Header" type="Elhub_HeaderType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProcessEnergyContext" type="Elhub_EnergyContextType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="PayloadMPEvent" type="Elhub_UpdateThirdPartyAccessType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\bim\market\RejectStartOfSupply.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:market:RejectStartOfSupply:v2" elementFormDefault="qualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" xmlns:rsm="urn:no:elhub:emif:market:RejectStartOfSupply:v2" xmlns:abie="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
  <xsd:import namespace="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2" schemaLocation="../common/Elhub_AggregatedBusinessInformationEntities.xsd"/>
  <xsd:element name="RejectStartOfSupply" type="rsm:RejectStartOfSupply"/>
  <xsd:complexType name="RejectStartOfSupply">
    <xsd:sequence>
      <xsd:element name="Header" type="Elhub_HeaderType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="ProcessEnergyContext" type="Elhub_EnergyContextType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="PayloadResponseEvent" type="Elhub_RejectEventSingleMPType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\ELHUB\market_wsdl\elhub_wsdl\2.3\wsdl\xsd\common.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:no:elhub:emif:wsdl:common:v2" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:no:elhub:emif:wsdl:common:v2">
  <xsd:element name="ElhubSOAPFault" type="tns:ElhubSOAPFaultType"/>
  <xsd:complexType name="ElhubSOAPFaultType">
    <xsd:sequence>
      <xsd:element name="CodeGroup" type="tns:CodeGroupType"/>
      <xsd:element name="Description">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="ExceptionDateTime">
        <xsd:simpleType>
          <xsd:restriction base="xsd:dateTime">
            <xsd:pattern value=".+T.+(Z|[+-].+)"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="FaultText" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1000"/>
            <xsd:minLength value="1"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CodeGroupType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="XSD"/>
      <xsd:enumeration value="Compression"/>
      <xsd:enumeration value="Security"/>
      <xsd:enumeration value="System"/>
      <xsd:enumeration value="UUID"/>
      <xsd:enumeration value="Size"/>
      <xsd:enumeration value="Date"/>
      <xsd:enumeration value="Other"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
      <con:endpoint>http://localhost:1234/WebService/services/MarketProcesses</con:endpoint>
      <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
      <con:endpoint>http://localhost:8090/WebService/services/MarketProcesses</con:endpoint>
    </con:endpoints>
    <con:operation action="RequestEndOfSupply" anonymous="optional" bindingOperationName="RequestEndOfSupply" id="74938ec3-f546-40ac-9531-2b2173185403" inputName="RequestEndOfSupplyRequest" isOneWay="false" name="RequestEndOfSupply" outputName="RequestEndOfSupplyResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
      <con:settings/>
      <con:call id="aa4102af-6670-43c5-af3a-4eb9b114d356" name="ValidRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://M5-L-18Q4ST2:8088/</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RequestEndOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RequestEndOfSupplyRequest>\r
         <urn1:RequestEndOfSupply>\r
            <urn1:Header>\r
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>\r
               <urn2:DocumentType listAgencyIdentifier="6">432</urn2:DocumentType>\r
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>\r
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>\r
               </urn2:JuridicalSenderEnergyParty>\r
               <urn2:JuridicalRecipientEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>\r
               </urn2:JuridicalRecipientEnergyParty>\r
            </urn1:Header>\r
            <urn1:ProcessEnergyContext>\r
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-201</urn2:EnergyBusinessProcess>\r
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>\r
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>\r
            </urn1:ProcessEnergyContext>\r
            <urn1:PayloadMPEvent>\r
               <urn2:EndOfOccurrence>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:EndOfOccurrence>\r
               <urn2:MeteringPointUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>\r
               </urn2:MeteringPointUsedDomainLocation>\r
               <urn2:BalanceSupplierInvolvedEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">2222222222229</urn2:Identification>\r
               </urn2:BalanceSupplierInvolvedEnergyParty>\r
               <urn2:ConsumerInvolvedCustomerParty>\r
                  <urn2:Identification schemeAgencyIdentifier="Z01">01018035871</urn2:Identification>\r
                  <urn2:GivenName>Ola</urn2:GivenName>\r
                  <urn2:FamilyName>Nordmann</urn2:FamilyName>\r
                  <urn2:Communication>\r
                     <urn2:CommunicationChannel>Mobile</urn2:CommunicationChannel>\r
                     <urn2:CompleteNumber>944 56 123</urn2:CompleteNumber>\r
                  </urn2:Communication>\r
               </urn2:ConsumerInvolvedCustomerParty>\r
               <urn2:ConsumerInvolvedCustomerAddress>\r
                  <urn2:AddressType>invoiceadr</urn2:AddressType>\r
                  <urn2:StreetName>Kirkegt.</urn2:StreetName>\r
                  <urn2:BuildingNumber>45</urn2:BuildingNumber>\r
                  <urn2:Postcode>7010</urn2:Postcode>\r
                  <urn2:CityName>Trondheim</urn2:CityName>\r
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>\r
               </urn2:ConsumerInvolvedCustomerAddress>\r
            </urn1:PayloadMPEvent>\r
         </urn1:RequestEndOfSupply>\r
      </urn:RequestEndOfSupplyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="c402719a-ab1f-4cfd-b0ae-6f4829410de8" name="XSDValidationErrorRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://M5-L-18Q4ST2:8088/</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RequestEndOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestEndOfSupplyRequest>
         <urn1:RequestEndOfSupply>
            <urn1:Header>
               <urn2:Identification>1234</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="6">432</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-201</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMPEvent>
               <urn2:EndOfOccurrence>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:EndOfOccurrence>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:BalanceSupplierInvolvedEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2222222222229</urn2:Identification>
               </urn2:BalanceSupplierInvolvedEnergyParty>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:Identification schemeAgencyIdentifier="Z01">01018035871</urn2:Identification>
                  <urn2:GivenName>Ola</urn2:GivenName>
                  <urn2:FamilyName>Nordmann</urn2:FamilyName>
                  <urn2:Communication>
                     <urn2:CommunicationChannel>Mobile</urn2:CommunicationChannel>
                     <urn2:CompleteNumber>944 56 123</urn2:CompleteNumber>
                  </urn2:Communication>
               </urn2:ConsumerInvolvedCustomerParty>
               <urn2:ConsumerInvolvedCustomerAddress>
                  <urn2:AddressType>invoiceadr</urn2:AddressType>
                  <urn2:StreetName>Kirkegt.</urn2:StreetName>
                  <urn2:BuildingNumber>45</urn2:BuildingNumber>
                  <urn2:Postcode>7010</urn2:Postcode>
                  <urn2:CityName>Trondheim</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
               </urn2:ConsumerInvolvedCustomerAddress>
            </urn1:PayloadMPEvent>
         </urn1:RequestEndOfSupply>
      </urn:RequestEndOfSupplyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="2d661aa2-2a43-45db-986c-e71af626761f" name="ValidRequest-System/SecurityFault">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>iso-8859-1</con:encoding>
        <con:endpoint>http://M5-L-18Q4ST2:8088/</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RequestEndOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestEndOfSupplyRequest>
         <urn1:RequestEndOfSupply>
            <urn1:Header>
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="6">432</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-201</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMPEvent>
               <urn2:EndOfOccurrence>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:EndOfOccurrence>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:BalanceSupplierInvolvedEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2222222222229</urn2:Identification>
               </urn2:BalanceSupplierInvolvedEnergyParty>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:Identification schemeAgencyIdentifier="Z01">01018035871</urn2:Identification>
                  <urn2:GivenName>Ola</urn2:GivenName>
                  <urn2:FamilyName>Nordmann</urn2:FamilyName>
                  <urn2:Communication>
                     <urn2:CommunicationChannel>Mobile</urn2:CommunicationChannel>
                     <urn2:CompleteNumber>944 56 123</urn2:CompleteNumber>
                  </urn2:Communication>
               </urn2:ConsumerInvolvedCustomerParty>
               <urn2:ConsumerInvolvedCustomerAddress>
                  <urn2:AddressType>invoiceadr</urn2:AddressType>
                  <urn2:StreetName>Kirkegt.</urn2:StreetName>
                  <urn2:BuildingNumber>45</urn2:BuildingNumber>
                  <urn2:Postcode>7010</urn2:Postcode>
                  <urn2:CityName>Trondheim</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
               </urn2:ConsumerInvolvedCustomerAddress>
            </urn1:PayloadMPEvent>
         </urn1:RequestEndOfSupply>
      </urn:RequestEndOfSupplyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
    <con:operation action="RequestStartOfSupply" anonymous="optional" bindingOperationName="RequestStartOfSupply" id="5369b27c-caec-4881-b9ea-e64ecaa53cc1" inputName="RequestStartOfSupplyRequest" isOneWay="false" name="RequestStartOfSupply" outputName="RequestStartOfSupplyResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
      <con:settings/>
      <con:call id="f5c07a8d-52dd-4191-8de0-f579e9602c73" name="ValidRequest" useWsAddressing="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RequestStartOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RequestStartOfSupplyRequest>\r
         <urn1:RequestStartOfSupply>\r
            <urn1:Header>\r
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>\r
               <urn2:DocumentType listAgencyIdentifier="6">392</urn2:DocumentType>\r
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>\r
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9934567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>\r
            <urn1:ProcessEnergyContext>\r
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-101</urn2:EnergyBusinessProcess>\r
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>\r
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>\r
            </urn1:ProcessEnergyContext>\r
            <urn1:PayloadMPEvent>\r
               <urn2:StartOfOccurrence>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:StartOfOccurrence>\r
               <urn2:MeteringPointUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>\r
               </urn2:MeteringPointUsedDomainLocation>\r
               <urn2:BalanceSupplierInvolvedEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">2222222222229</urn2:Identification>\r
               </urn2:BalanceSupplierInvolvedEnergyParty>\r
               <urn2:ConsumerInvolvedCustomerParty>\r
                  <urn2:Identification schemeAgencyIdentifier="82">987123456</urn2:Identification>\r
                  <urn2:Name>The Company ASA</urn2:Name>\r
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
                  <urn2:Communication>\r
                     <urn2:CommunicationChannel>Email</urn2:CommunicationChannel>\r
                     <urn2:CompleteNumber>ole.olsen@company.no</urn2:CompleteNumber>\r
                  </urn2:Communication>\r
               </urn2:ConsumerInvolvedCustomerParty>\r
               <urn2:ConsumerInvolvedCustomerAddress>\r
                  <urn2:AddressType>invoiceadr</urn2:AddressType>\r
                  <urn2:StreetName>Storgt.</urn2:StreetName>\r
                  <urn2:BuildingNumber>12</urn2:BuildingNumber>\r
                  <urn2:Postcode>5001</urn2:Postcode>\r
                  <urn2:CityName>BERGEN</urn2:CityName>\r
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>\r
                  <urn2:PostOfficeBox>Postboks 1239, Sentrum</urn2:PostOfficeBox>\r
               </urn2:ConsumerInvolvedCustomerAddress>\r
            </urn1:PayloadMPEvent>\r
         </urn1:RequestStartOfSupply>\r
      </urn:RequestStartOfSupplyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestStartOfSupply" addDefaultAction="false" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="e3c1b596-204f-4241-b227-57054f66c875" name="XSDValidationErrorRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RequestStartOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestStartOfSupplyRequest>
         <urn1:RequestStartOfSupply>
            <urn1:Header>
               <urn2:Identification>1234</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="6">392</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-101</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMPEvent>
               <urn2:StartOfOccurrence>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:StartOfOccurrence>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:BalanceSupplierInvolvedEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2222222222229</urn2:Identification>
               </urn2:BalanceSupplierInvolvedEnergyParty>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:Identification schemeAgencyIdentifier="82">987123456</urn2:Identification>
                  <urn2:Name>The Company ASA</urn2:Name>
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
                  <urn2:Communication>
                     <urn2:CommunicationChannel>Email</urn2:CommunicationChannel>
                     <urn2:CompleteNumber>ole.olsen@company.no</urn2:CompleteNumber>
                  </urn2:Communication>
               </urn2:ConsumerInvolvedCustomerParty>
               <urn2:ConsumerInvolvedCustomerAddress>
                  <urn2:AddressType>invoiceadr</urn2:AddressType>
                  <urn2:StreetName>Storgt.</urn2:StreetName>
                  <urn2:BuildingNumber>12</urn2:BuildingNumber>
                  <urn2:Postcode>5001</urn2:Postcode>
                  <urn2:CityName>BERGEN</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
                  <urn2:PostOfficeBox>Postboks 1239, Sentrum</urn2:PostOfficeBox>
               </urn2:ConsumerInvolvedCustomerAddress>
            </urn1:PayloadMPEvent>
         </urn1:RequestStartOfSupply>
      </urn:RequestStartOfSupplyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="333a876a-23f4-4f0c-a30f-4fc011cf6185" name="ValidRequest-System/SecurityFault">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8090/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RequestStartOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestStartOfSupplyRequest>
         <urn1:RequestStartOfSupply>
            <urn1:Header>
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="6">392</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-101</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMPEvent>
               <urn2:StartOfOccurrence>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:StartOfOccurrence>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:BalanceSupplierInvolvedEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2222222222229</urn2:Identification>
               </urn2:BalanceSupplierInvolvedEnergyParty>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:Identification schemeAgencyIdentifier="82">987123456</urn2:Identification>
                  <urn2:Name>The Company ASA</urn2:Name>
                  <urn2:ExtendedStorageMeteringValues>false</urn2:ExtendedStorageMeteringValues>
                  <urn2:Communication>
                     <urn2:CommunicationChannel>Email</urn2:CommunicationChannel>
                     <urn2:CompleteNumber>ole.olsen@company.no</urn2:CompleteNumber>
                  </urn2:Communication>
               </urn2:ConsumerInvolvedCustomerParty>
               <urn2:ConsumerInvolvedCustomerAddress>
                  <urn2:AddressType>invoiceadr</urn2:AddressType>
                  <urn2:StreetName>Storgt.</urn2:StreetName>
                  <urn2:BuildingNumber>12</urn2:BuildingNumber>
                  <urn2:Postcode>5001</urn2:Postcode>
                  <urn2:CityName>BERGEN</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
                  <urn2:PostOfficeBox>Postboks 1239, Sentrum</urn2:PostOfficeBox>
               </urn2:ConsumerInvolvedCustomerAddress>
            </urn1:PayloadMPEvent>
         </urn1:RequestStartOfSupply>
      </urn:RequestStartOfSupplyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
    <con:operation action="RequestUpdateCustomerInformation" anonymous="optional" bindingOperationName="RequestUpdateCustomerInformation" id="f110add5-f7f3-499f-8c94-918905fded3f" inputName="RequestUpdateCustomerInformationRequest" isOneWay="false" name="RequestUpdateCustomerInformation" outputName="RequestUpdateCustomerInformationResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
      <con:settings/>
      <con:call id="cd6e2e42-5b31-4b3d-92ea-50398d620013" name="ValidRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:masterdata:RequestUpdateCustomerInformation:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RequestUpdateCustomerInformationRequest>\r
         <urn1:RequestUpdateCustomerInformation>\r
            <urn1:Header>\r
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>\r
               <urn2:DocumentType listAgencyIdentifier="260">E10</urn2:DocumentType>\r
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>\r
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>\r
            <urn1:ProcessEnergyContext>\r
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-301</urn2:EnergyBusinessProcess>\r
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>\r
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>\r
            </urn1:ProcessEnergyContext>\r
            <urn1:PayloadMasterDataMPEvent>\r
               <urn2:MeteringPointUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>\r
               </urn2:MeteringPointUsedDomainLocation>\r
               <urn2:ConsumerInvolvedCustomerParty>\r
                  <urn2:Identification schemeAgencyIdentifier="82">973652456</urn2:Identification>\r
                  <urn2:Name>The Company ASA</urn2:Name>\r
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
               </urn2:ConsumerInvolvedCustomerParty>\r
               <urn2:ConsumerInvolvedCustomerAddress>\r
                  <urn2:AddressType>invoiceadr</urn2:AddressType>
                  <urn2:StreetName>Storgt.</urn2:StreetName>
                  <urn2:BuildingNumber>12</urn2:BuildingNumber>
                  <urn2:Postcode>7000</urn2:Postcode>
                  <urn2:CityName>TROMSØ</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
               </urn2:ConsumerInvolvedCustomerAddress>\r
            </urn1:PayloadMasterDataMPEvent>\r
         </urn1:RequestUpdateCustomerInformation>\r
      </urn:RequestUpdateCustomerInformationRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="da00293d-e191-48aa-b2f0-9afacb6f798a" name="XSDValidationErrorRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:masterdata:RequestUpdateCustomerInformation:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestUpdateCustomerInformationRequest>
         <urn1:RequestUpdateCustomerInformation>
            <urn1:Header>
               <urn2:Identification>1234</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="260">E10</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-301</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMasterDataMPEvent>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:Identification schemeAgencyIdentifier="82">973652456</urn2:Identification>
                  <urn2:Name>The Company ASA</urn2:Name>
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
               </urn2:ConsumerInvolvedCustomerParty>
               <urn2:ConsumerInvolvedCustomerAddress>
                  <urn2:AddressType>invoiceadr</urn2:AddressType>
                  <urn2:StreetName>Storgt.</urn2:StreetName>
                  <urn2:BuildingNumber>12</urn2:BuildingNumber>
                  <urn2:Postcode>7000</urn2:Postcode>
                  <urn2:CityName>TROMSØ</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
               </urn2:ConsumerInvolvedCustomerAddress>
            </urn1:PayloadMasterDataMPEvent>
         </urn1:RequestUpdateCustomerInformation>
      </urn:RequestUpdateCustomerInformationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="e10f2523-9fa9-49d7-979b-904ad83a4a43" name="ValidRequest-System/SecurityFault">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>iso-8859-1</con:encoding>
        <con:endpoint>http://localhost:8090/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:masterdata:RequestUpdateCustomerInformation:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestUpdateCustomerInformationRequest>
         <urn1:RequestUpdateCustomerInformation>
            <urn1:Header>
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="260">E10</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-301</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDQ</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMasterDataMPEvent>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:Identification schemeAgencyIdentifier="82">973652456</urn2:Identification>
                  <urn2:Name>The Company ASA</urn2:Name>
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
               </urn2:ConsumerInvolvedCustomerParty>
               <urn2:ConsumerInvolvedCustomerAddress>
                  <urn2:AddressType>invoiceadr</urn2:AddressType>
                  <urn2:StreetName>Storgt.</urn2:StreetName>
                  <urn2:BuildingNumber>12</urn2:BuildingNumber>
                  <urn2:Postcode>7000</urn2:Postcode>
                  <urn2:CityName>TROMSØ</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
               </urn2:ConsumerInvolvedCustomerAddress>
            </urn1:PayloadMasterDataMPEvent>
         </urn1:RequestUpdateCustomerInformation>
      </urn:RequestUpdateCustomerInformationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
    <con:operation action="RequestUpdateMasterDataMeteringPoint" anonymous="optional" bindingOperationName="RequestUpdateMasterDataMeteringPoint" id="58953445-5c02-45b4-993b-70fda7a67c3f" inputName="RequestUpdateMasterDataMeteringPointRequest" isOneWay="false" name="RequestUpdateMasterDataMeteringPoint" outputName="RequestUpdateMasterDataMeteringPointResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
      <con:settings/>
      <con:call id="cbf58feb-dcdc-4c60-b998-33cfaf5bf498" name="ValidRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RequestUpdateMasterDataMeteringPointRequest>\r
         <urn1:RequestUpdateMasterDataMeteringPoint>\r
            <urn1:Header>\r
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>\r
               <urn2:DocumentType listAgencyIdentifier="260">E58</urn2:DocumentType>\r
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>\r
               <urn2:RequestPositiveAcknowledgement>true</urn2:RequestPositiveAcknowledgement>\r
               <urn2:PhysicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>\r
               </urn2:PhysicalSenderEnergyParty>\r
               <urn2:JuridicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>\r
               </urn2:JuridicalSenderEnergyParty>\r
               <urn2:JuridicalRecipientEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>\r
               </urn2:JuridicalRecipientEnergyParty>\r
            </urn1:Header>\r
            <urn1:ProcessEnergyContext>\r
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-121</urn2:EnergyBusinessProcess>\r
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDM</urn2:EnergyBusinessProcessRole>\r
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>\r
            </urn1:ProcessEnergyContext>\r
            <urn1:PayloadMasterDataMPEvent>\r
               <urn2:MeteringPointUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>\r
               </urn2:MeteringPointUsedDomainLocation>\r
               <urn2:MeteringGridAreaUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="305">EIC-Y12345678901</urn2:Identification>\r
               </urn2:MeteringGridAreaUsedDomainLocation>\r
               <urn2:MPAddressMeteringPointAddress>\r
                  <urn2:StreetName>Kirkegt.</urn2:StreetName>\r
                  <urn2:BuildingNumber>45</urn2:BuildingNumber>\r
                  <urn2:Postcode>7010</urn2:Postcode>\r
                  <urn2:CityName>Trondheim</urn2:CityName>\r
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>\r
               </urn2:MPAddressMeteringPointAddress>\r
               <urn2:MPPositionMeteringPointGeographicalCoordinate>\r
                  <urn2:Latitude>61.87654</urn2:Latitude>\r
                  <urn2:Longitude>11.98763</urn2:Longitude>\r
               </urn2:MPPositionMeteringPointGeographicalCoordinate>\r
               <urn2:MPAddressCadastral>\r
                  <urn2:Gnr>0547</urn2:Gnr>\r
                  <urn2:Bnr>132</urn2:Bnr>\r
               </urn2:MPAddressCadastral>\r
               <urn2:MpDetailMeteringPointCharacteristic>\r
                  <urn2:MeteringPointType listAgencyIdentifier="260">E17</urn2:MeteringPointType>\r
                  <urn2:MeteringPointSubTypeConsumption listAgencyIdentifier="89">A04</urn2:MeteringPointSubTypeConsumption>\r
                  <urn2:MeterReadingCharacteristics listAgencyIdentifier="260">E14</urn2:MeterReadingCharacteristics>\r
                  <urn2:SettlementMethodType listAgencyIdentifier="260">E01</urn2:SettlementMethodType>\r
                  <urn2:ContractedConnectionCapacityValue>27000</urn2:ContractedConnectionCapacityValue>\r
                  <urn2:MeterReadingFrequencyDuration>12</urn2:MeterReadingFrequencyDuration>\r
                  <urn2:Description>Freetext</urn2:Description>\r
                  <urn2:Priority>A</urn2:Priority>\r
                  <urn2:BlockedForSwitching>false</urn2:BlockedForSwitching>\r
               </urn2:MpDetailMeteringPointCharacteristic>\r
               <urn2:AnnualPeriodEstimatedMetrics>\r
                  <urn2:Total>27000</urn2:Total>\r
                  <urn2:CalculationMethod>Manual</urn2:CalculationMethod>\r
               </urn2:AnnualPeriodEstimatedMetrics>\r
               <urn2:MeteringInstallationMeterFacility>\r
                  <urn2:MeterIdentification>0087345763</urn2:MeterIdentification>\r
                  <urn2:NumberOfDigits>7</urn2:NumberOfDigits>\r
                  <urn2:Constant>1</urn2:Constant>\r
                  <urn2:MeterLocation>In the cellar</urn2:MeterLocation>\r
               </urn2:MeteringInstallationMeterFacility>\r
               <urn2:MPTaxationProfile>\r
                  <urn2:VATCode>S</urn2:VATCode>\r
                  <urn2:EnovaFeeType>ConsumptionDependent</urn2:EnovaFeeType>\r
                  <urn2:EnovaFee>50</urn2:EnovaFee>\r
                  <urn2:ElFee>75</urn2:ElFee>\r
                  <urn2:ElCertificateShare>80</urn2:ElCertificateShare>\r
               </urn2:MPTaxationProfile>\r
            </urn1:PayloadMasterDataMPEvent>\r
         </urn1:RequestUpdateMasterDataMeteringPoint>\r
      </urn:RequestUpdateMasterDataMeteringPointRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="7787cc10-20e0-4099-976d-3b3673477491" name="XSDValidationErrorRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://service-test2.elhub.cloud:8200/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestUpdateMasterDataMeteringPointRequest>
         <urn1:RequestUpdateMasterDataMeteringPoint>
            <urn1:Header>
               <urn2:Identification>1234</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="260">E58</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:RequestPositiveAcknowledgement>true</urn2:RequestPositiveAcknowledgement>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-121</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDM</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMasterDataMPEvent>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:MeteringGridAreaUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="305">EIC-Y12345678901</urn2:Identification>
               </urn2:MeteringGridAreaUsedDomainLocation>
               <urn2:MPAddressMeteringPointAddress>
                  <urn2:StreetName>Kirkegt.</urn2:StreetName>
                  <urn2:BuildingNumber>45</urn2:BuildingNumber>
                  <urn2:Postcode>7010</urn2:Postcode>
                  <urn2:CityName>Trondheim</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
               </urn2:MPAddressMeteringPointAddress>
               <urn2:MPPositionMeteringPointGeographicalCoordinate>
                  <urn2:Latitude>61.87654</urn2:Latitude>
                  <urn2:Longitude>11.98763</urn2:Longitude>
               </urn2:MPPositionMeteringPointGeographicalCoordinate>
               <urn2:MPAddressCadastral>
                  <urn2:Gnr>0547</urn2:Gnr>
                  <urn2:Bnr>132</urn2:Bnr>
               </urn2:MPAddressCadastral>
               <urn2:MpDetailMeteringPointCharacteristic>
                  <urn2:MeteringPointType listAgencyIdentifier="260">E17</urn2:MeteringPointType>
                  <urn2:MeteringPointSubTypeConsumption listAgencyIdentifier="89">A04</urn2:MeteringPointSubTypeConsumption>
                  <urn2:MeterReadingCharacteristics listAgencyIdentifier="260">E14</urn2:MeterReadingCharacteristics>
                  <urn2:SettlementMethodType listAgencyIdentifier="260">E01</urn2:SettlementMethodType>
                  <urn2:ContractedConnectionCapacityValue>27000</urn2:ContractedConnectionCapacityValue>
                  <urn2:MeterReadingFrequencyDuration>12</urn2:MeterReadingFrequencyDuration>
                  <urn2:Description>Freetext</urn2:Description>
                  <urn2:Priority>A</urn2:Priority>
                  <urn2:BlockedForSwitching>false</urn2:BlockedForSwitching>
               </urn2:MpDetailMeteringPointCharacteristic>
               <urn2:AnnualPeriodEstimatedMetrics>
                  <urn2:Total>27000</urn2:Total>
                  <urn2:CalculationMethod>Manual</urn2:CalculationMethod>
               </urn2:AnnualPeriodEstimatedMetrics>
               <urn2:MeteringInstallationMeterFacility>
                  <urn2:MeterIdentification>0087345763</urn2:MeterIdentification>
                  <urn2:NumberOfDigits>7</urn2:NumberOfDigits>
                  <urn2:Constant>1</urn2:Constant>
                  <urn2:MeterLocation>In the cellar</urn2:MeterLocation>
               </urn2:MeteringInstallationMeterFacility>
               <urn2:MPTaxationProfile>
                  <urn2:VATCode>S</urn2:VATCode>
                  <urn2:EnovaFeeType>ConsumptionDependent</urn2:EnovaFeeType>
                  <urn2:EnovaFee>50</urn2:EnovaFee>
                  <urn2:ElFee>75</urn2:ElFee>
                  <urn2:ElCertificateShare>80</urn2:ElCertificateShare>
               </urn2:MPTaxationProfile>
            </urn1:PayloadMasterDataMPEvent>
         </urn1:RequestUpdateMasterDataMeteringPoint>
      </urn:RequestUpdateMasterDataMeteringPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="f2667adc-12d6-41f1-85bb-cf6eb707d059" name="ValidRequest-System/SecurityFault">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>iso-8859-1</con:encoding>
        <con:endpoint>http://localhost:8090/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RequestUpdateMasterDataMeteringPointRequest>
         <urn1:RequestUpdateMasterDataMeteringPoint>
            <urn1:Header>
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="260">E58</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:RequestPositiveAcknowledgement>true</urn2:RequestPositiveAcknowledgement>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-121</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDM</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMasterDataMPEvent>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707057500022939815</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:MeteringGridAreaUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="305">EIC-Y12345678901</urn2:Identification>
               </urn2:MeteringGridAreaUsedDomainLocation>
               <urn2:MPAddressMeteringPointAddress>
                  <urn2:StreetName>Kirkegt.</urn2:StreetName>
                  <urn2:BuildingNumber>45</urn2:BuildingNumber>
                  <urn2:Postcode>7010</urn2:Postcode>
                  <urn2:CityName>Trondheim</urn2:CityName>
                  <urn2:CountryCode listAgencyIdentifier="5">NO</urn2:CountryCode>
               </urn2:MPAddressMeteringPointAddress>
               <urn2:MPPositionMeteringPointGeographicalCoordinate>
                  <urn2:Latitude>61.87654</urn2:Latitude>
                  <urn2:Longitude>11.98763</urn2:Longitude>
               </urn2:MPPositionMeteringPointGeographicalCoordinate>
               <urn2:MPAddressCadastral>
                  <urn2:Gnr>0547</urn2:Gnr>
                  <urn2:Bnr>132</urn2:Bnr>
               </urn2:MPAddressCadastral>
               <urn2:MpDetailMeteringPointCharacteristic>
                  <urn2:MeteringPointType listAgencyIdentifier="260">E17</urn2:MeteringPointType>
                  <urn2:MeteringPointSubTypeConsumption listAgencyIdentifier="89">A04</urn2:MeteringPointSubTypeConsumption>
                  <urn2:MeterReadingCharacteristics listAgencyIdentifier="260">E14</urn2:MeterReadingCharacteristics>
                  <urn2:SettlementMethodType listAgencyIdentifier="260">E01</urn2:SettlementMethodType>
                  <urn2:ContractedConnectionCapacityValue>27000</urn2:ContractedConnectionCapacityValue>
                  <urn2:MeterReadingFrequencyDuration>12</urn2:MeterReadingFrequencyDuration>
                  <urn2:Description>Freetext</urn2:Description>
                  <urn2:Priority>A</urn2:Priority>
                  <urn2:BlockedForSwitching>false</urn2:BlockedForSwitching>
               </urn2:MpDetailMeteringPointCharacteristic>
               <urn2:AnnualPeriodEstimatedMetrics>
                  <urn2:Total>27000</urn2:Total>
                  <urn2:CalculationMethod>Manual</urn2:CalculationMethod>
               </urn2:AnnualPeriodEstimatedMetrics>
               <urn2:MeteringInstallationMeterFacility>
                  <urn2:MeterIdentification>0087345763</urn2:MeterIdentification>
                  <urn2:NumberOfDigits>7</urn2:NumberOfDigits>
                  <urn2:Constant>1</urn2:Constant>
                  <urn2:MeterLocation>In the cellar</urn2:MeterLocation>
               </urn2:MeteringInstallationMeterFacility>
               <urn2:MPTaxationProfile>
                  <urn2:VATCode>S</urn2:VATCode>
                  <urn2:EnovaFeeType>ConsumptionDependent</urn2:EnovaFeeType>
                  <urn2:EnovaFee>50</urn2:EnovaFee>
                  <urn2:ElFee>75</urn2:ElFee>
                  <urn2:ElCertificateShare>80</urn2:ElCertificateShare>
               </urn2:MPTaxationProfile>
            </urn1:PayloadMasterDataMPEvent>
         </urn1:RequestUpdateMasterDataMeteringPoint>
      </urn:RequestUpdateMasterDataMeteringPointRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="0191a9aa-7c49-4c26-86c4-dd1fa06e185d" name="ValidRequest-15Mins"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1234/WebService/services/MarketProcesses</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:masterdata:RequestUpdateMasterDataMeteringPoint:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RequestUpdateMasterDataMeteringPointRequest>\r
         <urn1:RequestUpdateMasterDataMeteringPoint>\r
            <urn1:Header>\r
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>\r
               <urn2:DocumentType listAgencyIdentifier="260">E58</urn2:DocumentType>\r
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>\r
               <urn2:PhysicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>\r
               </urn2:PhysicalSenderEnergyParty>\r
               <urn2:JuridicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">2345678901231</urn2:Identification>\r
               </urn2:JuridicalSenderEnergyParty>\r
               <urn2:JuridicalRecipientEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>\r
               </urn2:JuridicalRecipientEnergyParty>\r
            </urn1:Header>\r
            <urn1:ProcessEnergyContext>\r
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-317</urn2:EnergyBusinessProcess>\r
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDM</urn2:EnergyBusinessProcessRole>\r
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>\r
            </urn1:ProcessEnergyContext>\r
            <urn1:PayloadMasterDataMPEvent>\r
               <urn2:StartOfOccurrence>2017-10-04T00:00:00+02:00</urn2:StartOfOccurrence>\r
               <urn2:Identification>6ec0a538-c0a1-46bc-9e17-e63b844ecead</urn2:Identification>\r
               <urn2:MeteringPointUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="9">707432561970110370</urn2:Identification>\r
               </urn2:MeteringPointUsedDomainLocation>\r
               <urn2:MpDetailMeteringPointCharacteristic>\r
                  <urn2:MeteringPointType listAgencyIdentifier="260">E17</urn2:MeteringPointType>\r
                  <urn2:MeteringPointSubTypeConsumption listAgencyIdentifier="89">A04</urn2:MeteringPointSubTypeConsumption>\r
                  <urn2:MeterReadingCharacteristics listAgencyIdentifier="260">E14</urn2:MeterReadingCharacteristics>\r
                  <urn2:SettlementMethodType listAgencyIdentifier="260">E01</urn2:SettlementMethodType>\r
                  <urn2:ContractedConnectionCapacityValue>27000</urn2:ContractedConnectionCapacityValue>\r
                  <urn2:MeterReadingFrequencyDuration>12</urn2:MeterReadingFrequencyDuration>\r
                  <urn2:Description>Freetext</urn2:Description>\r
                  <urn2:Priority>A</urn2:Priority>\r
                  <urn2:BlockedForSwitching>false</urn2:BlockedForSwitching>\r
                  <urn2:MeterReadingOccurrence>PT15M</urn2:MeterReadingOccurrence>\r
               </urn2:MpDetailMeteringPointCharacteristic>\r
               <urn2:AnnualPeriodEstimatedMetrics>\r
                  <urn2:Total>2530</urn2:Total>\r
                  <urn2:CalculationMethod>Automatic</urn2:CalculationMethod>\r
               </urn2:AnnualPeriodEstimatedMetrics>\r
               <urn2:MeasurementDefinition>\r
                  <urn2:ProductIncludedProductCharacteristics>\r
                     <urn2:Identification schemeAgencyIdentifier="9">4700000000101</urn2:Identification>\r
                     <urn2:UnitType>kWh</urn2:UnitType>\r
                  </urn2:ProductIncludedProductCharacteristics>\r
                  <urn2:Direction>Out</urn2:Direction>\r
                  <urn2:Resolution>PT15M</urn2:Resolution>\r
                  <urn2:ExcludeFromSettlement>false</urn2:ExcludeFromSettlement>\r
               </urn2:MeasurementDefinition>\r
            </urn1:PayloadMasterDataMPEvent>\r
         </urn1:RequestUpdateMasterDataMeteringPoint>\r
      </urn:RequestUpdateMasterDataMeteringPointRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="RequestUpdateMasterDataMeteringPoint"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation action="UpdateThirdPartyAccess" anonymous="optional" bindingOperationName="UpdateThirdPartyAccess" id="81cf8cf5-3527-43fa-a1c4-7a8aef581a97" inputName="UpdateThirdPartyAccessRequest" isOneWay="false" name="UpdateThirdPartyAccess" outputName="UpdateThirdPartyAccessResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
      <con:settings/>
      <con:call id="51c6e180-3e00-4507-ba14-71be479208be" name="ValidRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:thirdpartyaccess:UpdateThirdPartyAccess:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:UpdateThirdPartyAccessRequest>
         <urn1:UpdateThirdPartyAccess>
            <urn1:Header>
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="260">E10</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:RequestPositiveAcknowledgement>false</urn2:RequestPositiveAcknowledgement>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">3456789012321</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">3456789012321</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-622</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">AG</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMPEvent>
               <urn2:UpdateIndicator>Add</urn2:UpdateIndicator>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707059876463578765</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
               </urn2:ConsumerInvolvedCustomerParty>
            </urn1:PayloadMPEvent>
         </urn1:UpdateThirdPartyAccess>
      </urn:UpdateThirdPartyAccessRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="3a1ac0d3-5d6b-4d26-814b-125cf75f717c" name="XSDValidationErrorRequest">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:thirdpartyaccess:UpdateThirdPartyAccess:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:UpdateThirdPartyAccessRequest>
         <urn1:UpdateThirdPartyAccess>
            <urn1:Header>
               <urn2:Identification>1234</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="260">E10</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:RequestPositiveAcknowledgement>false</urn2:RequestPositiveAcknowledgement>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">3456789012321</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">3456789012321</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-622</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">AG</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMPEvent>
               <urn2:UpdateIndicator>Add</urn2:UpdateIndicator>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707059876463578765</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
               </urn2:ConsumerInvolvedCustomerParty>
            </urn1:PayloadMPEvent>
         </urn1:UpdateThirdPartyAccess>
      </urn:UpdateThirdPartyAccessRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="6138d5f5-cd81-4c19-af77-ad3bcf84e286" name="ValidRequest-System/SecurityFault">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>iso-8859-1</con:encoding>
        <con:endpoint>http://localhost:8090/WebService/services/MarketProcesses</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:thirdpartyaccess:UpdateThirdPartyAccess:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:UpdateThirdPartyAccessRequest>
         <urn1:UpdateThirdPartyAccess>
            <urn1:Header>
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="260">E10</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <urn2:RequestPositiveAcknowledgement>false</urn2:RequestPositiveAcknowledgement>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">3456789012321</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">3456789012321</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-622</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">AG</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadMPEvent>
               <urn2:UpdateIndicator>Add</urn2:UpdateIndicator>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">707059876463578765</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
               <urn2:ConsumerInvolvedCustomerParty>
                  <urn2:ExtendedStorageMeteringValues>true</urn2:ExtendedStorageMeteringValues>
               </urn2:ConsumerInvolvedCustomerParty>
            </urn1:PayloadMPEvent>
         </urn1:UpdateThirdPartyAccess>
      </urn:UpdateThirdPartyAccessRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
  <con:operation id="3ed79883-c18b-4492-93ea-6b688c5cc069" isOneWay="false" action="RejectStartOfSupply" name="RejectStartOfSupply" bindingOperationName="RejectStartOfSupply" type="Request-Response" outputName="RejectStartOfSupplyResponse" inputName="RejectStartOfSupplyRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f8ff9ef3-fac0-41d2-b4f0-ff852789a2b3" name="ValidRequest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://oracle12c-PC:8080/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RejectStartOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RejectStartOfSupplyRequest>\r
         <urn1:RejectStartOfSupply>\r
            <urn1:Header>\r
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>\r
               <urn2:DocumentType listAgencyIdentifier="6">414</urn2:DocumentType>\r
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>\r
               <!--Optional:-->\r
               <urn2:RequestPositiveAcknowledgement>true</urn2:RequestPositiveAcknowledgement>\r
               <urn2:PhysicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>\r
               </urn2:PhysicalSenderEnergyParty>\r
               <urn2:JuridicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>\r
               </urn2:JuridicalSenderEnergyParty>\r
               <urn2:JuridicalRecipientEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>\r
               </urn2:JuridicalRecipientEnergyParty>\r
            </urn1:Header>\r
            <urn1:ProcessEnergyContext>\r
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-102</urn2:EnergyBusinessProcess>\r
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDM</urn2:EnergyBusinessProcessRole>\r
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>\r
            </urn1:ProcessEnergyContext>\r
            <urn1:PayloadResponseEvent>\r
               <urn2:OriginalBusinessDocumentReference>${=java.util.UUID.randomUUID().toString()}</urn2:OriginalBusinessDocumentReference>\r
               <urn2:ResponseReasonType listAgencyIdentifier="260">EH095</urn2:ResponseReasonType>\r
               <urn2:MeteringPointUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="9">261116200000008005</urn2:Identification>\r
               </urn2:MeteringPointUsedDomainLocation>\r
            </urn1:PayloadResponseEvent>\r
         </urn1:RejectStartOfSupply>\r
      </urn:RejectStartOfSupplyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/><con:wsrmConfig version="1.2"/></con:call><con:call id="7e54eb7d-a74a-4b7e-b02c-e40b83ca71ca" name="ValidRequest-SystemSecurityFault"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>iso-8859-1</con:encoding><con:endpoint>http://oracle12c-PC:8080/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RejectStartOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RejectStartOfSupplyRequest>
         <urn1:RejectStartOfSupply>
            <urn1:Header>
               <urn2:Identification>${=java.util.UUID.randomUUID().toString()}</urn2:Identification>
               <urn2:DocumentType listAgencyIdentifier="6">414</urn2:DocumentType>
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>
               <!--Optional:-->
               <urn2:RequestPositiveAcknowledgement>true</urn2:RequestPositiveAcknowledgement>
               <urn2:PhysicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:PhysicalSenderEnergyParty>
               <urn2:JuridicalSenderEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>
               </urn2:JuridicalSenderEnergyParty>
               <urn2:JuridicalRecipientEnergyParty>
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>
               </urn2:JuridicalRecipientEnergyParty>
            </urn1:Header>
            <urn1:ProcessEnergyContext>
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-102</urn2:EnergyBusinessProcess>
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDM</urn2:EnergyBusinessProcessRole>
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>
            </urn1:ProcessEnergyContext>
            <urn1:PayloadResponseEvent>
               <urn2:OriginalBusinessDocumentReference>${=java.util.UUID.randomUUID().toString()}</urn2:OriginalBusinessDocumentReference>
               <urn2:ResponseReasonType listAgencyIdentifier="260">EH095</urn2:ResponseReasonType>
               <urn2:MeteringPointUsedDomainLocation>
                  <urn2:Identification schemeAgencyIdentifier="9">261116200000008005</urn2:Identification>
               </urn2:MeteringPointUsedDomainLocation>
            </urn1:PayloadResponseEvent>
         </urn1:RejectStartOfSupply>
      </urn:RejectStartOfSupplyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/><con:wsrmConfig version="1.2"/></con:call><con:call id="24c32814-8300-4503-aa2e-0f6f108a6949" name="XSDValidationErrorRequest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://oracle12c-PC:8080/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:marketprocesses:v2" xmlns:urn1="urn:no:elhub:emif:market:RejectStartOfSupply:v2" xmlns:urn2="urn:no:elhub:emif:common:AggregatedBusinessInformationEntities:v2">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RejectStartOfSupplyRequest>\r
         <urn1:RejectStartOfSupply>\r
            <urn1:Header>\r
               <urn2:Identification>1234</urn2:Identification>\r
               <urn2:DocumentType listAgencyIdentifier="6">414</urn2:DocumentType>\r
               <urn2:Creation>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn2:Creation>\r
               <!--Optional:-->\r
               <urn2:RequestPositiveAcknowledgement>true</urn2:RequestPositiveAcknowledgement>\r
               <urn2:PhysicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>\r
               </urn2:PhysicalSenderEnergyParty>\r
               <urn2:JuridicalSenderEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">1234567890123</urn2:Identification>\r
               </urn2:JuridicalSenderEnergyParty>\r
               <urn2:JuridicalRecipientEnergyParty>\r
                  <urn2:Identification schemeAgencyIdentifier="9">9876543210123</urn2:Identification>\r
               </urn2:JuridicalRecipientEnergyParty>\r
            </urn1:Header>\r
            <urn1:ProcessEnergyContext>\r
               <urn2:EnergyBusinessProcess listAgencyIdentifier="89">BRS-NO-102</urn2:EnergyBusinessProcess>\r
               <urn2:EnergyBusinessProcessRole listAgencyIdentifier="6">DDM</urn2:EnergyBusinessProcessRole>\r
               <urn2:EnergyIndustryClassification>23</urn2:EnergyIndustryClassification>\r
            </urn1:ProcessEnergyContext>\r
            <urn1:PayloadResponseEvent>\r
               <urn2:OriginalBusinessDocumentReference>${=java.util.UUID.randomUUID().toString()}</urn2:OriginalBusinessDocumentReference>\r
               <urn2:ResponseReasonType listAgencyIdentifier="260">EH095</urn2:ResponseReasonType>\r
               <urn2:MeteringPointUsedDomainLocation>\r
                  <urn2:Identification schemeAgencyIdentifier="9">261116200000008005</urn2:Identification>\r
               </urn2:MeteringPointUsedDomainLocation>\r
            </urn1:PayloadResponseEvent>\r
         </urn1:RejectStartOfSupply>\r
      </urn:RejectStartOfSupplyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface>
  <con:mockService host="M5-L-18Q4ST2" id="5e300152-4ae5-46c0-9a1e-8a9595afc081" incomingWss="Incoming" name="MockService" outgoingWss="" path="/" port="8088" bindToHostOnly="false" docroot="">
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting>
    </con:settings>
    <con:properties/>
    <con:mockOperation id="4884cdb7-14a8-43cd-932d-f6ff7e05a41e" interface="MarketProcessesSoapBinding" name="RequestEndOfSupply" operation="RequestEndOfSupply">
      <con:settings/>
      <con:defaultResponse>OKResponse</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);

StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
  context.setProperty("contentType", contentType);
  return "EncodingError";
}

WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	return "OKResponse";
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="200" id="70864710-6b22-4a19-8f6e-6d771e35fcda" name="OKResponse" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> &lt;soapenv:Header/> &lt;soapenv:Body/> &lt;/soapenv:Envelope></con:responseContent>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="d66643f6-a161-4e5a-ac04-b3e2b70e54c8" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="d66643f6-a161-4e5a-ac04-b3e2b70e54c8" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="c80d18fb-19ca-4f5e-9e75-21a4b81bcb8b" interface="MarketProcessesSoapBinding" name="RequestStartOfSupply" operation="RequestStartOfSupply">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);

StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}

WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	return "OKResponse";
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="b972aaf7-4831-4a6a-83c5-84e5c4415df3" name="OKResponse" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> &lt;soapenv:Header/> &lt;soapenv:Body/> &lt;/soapenv:Envelope></con:responseContent>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="124c973e-391f-431b-a172-ef608e2f3ecb" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="124c973e-391f-431b-a172-ef608e2f3ecb" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="00266afa-556f-4f9e-9218-62f8d33d7c28" interface="MarketProcessesSoapBinding" name="RequestUpdateCustomerInformation" operation="RequestUpdateCustomerInformation">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);

StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}

WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	return "OKResponse";
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="200" id="dd099285-8264-4114-ae95-01f9a6f96227" name="OKResponse" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> &lt;soapenv:Header/> &lt;soapenv:Body/> &lt;/soapenv:Envelope></con:responseContent>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="5c10f321-1d65-4258-be31-2f4a331f676e" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="5c10f321-1d65-4258-be31-2f4a331f676e" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="28edacfb-9318-47fa-ab6f-21315928e8c3" interface="MarketProcessesSoapBinding" name="RequestUpdateMasterDataMeteringPoint" operation="RequestUpdateMasterDataMeteringPoint">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);

StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}

WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	return "OKResponse";
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="200" id="6a15ff25-abdc-4b61-858f-c104ce704a22" name="OKResponse" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> &lt;soapenv:Header/> &lt;soapenv:Body/> &lt;/soapenv:Envelope></con:responseContent>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="cc94bf29-a8d1-455a-961d-5287fcbafd5a" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="cc94bf29-a8d1-455a-961d-5287fcbafd5a" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="db58a111-ea10-4b1d-bbc2-6cc93db0d957" interface="MarketProcessesSoapBinding" name="UpdateThirdPartyAccess" operation="UpdateThirdPartyAccess">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);
StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}
WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	return "OKResponse";
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="258da816-cfd8-4247-ae92-e1f215ffa4cf" name="OKResponse" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> &lt;soapenv:Header/> &lt;soapenv:Body/> &lt;/soapenv:Envelope></con:responseContent>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="bd5786f5-5c17-4307-9403-2bde8c91bc0f" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="bd5786f5-5c17-4307-9403-2bde8c91bc0f" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
  <con:mockOperation name="RejectStartOfSupply" id="ab0f0411-b345-4ae5-8dd6-8d60b0dd5012" interface="MarketProcessesSoapBinding" operation="RequestEndOfSupply"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="OKResponse" id="eaae4d70-7a7c-4078-8570-88f182764809" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> &lt;soapenv:Header/> &lt;soapenv:Body/> &lt;/soapenv:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/></con:response><con:response name="ValidationError" id="eaae4d70-7a7c-4078-8570-88f182764809" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/></con:response><con:response name="EncodingError" id="eaae4d70-7a7c-4078-8570-88f182764809" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService>
  <con:mockService bindToHostOnly="false" docroot="" host="oracle12c-PC" id="dd033dac-0bcb-4b99-b058-24f031761add" incomingWss="Incoming" name="ElhubSoapFaultMockService" path="/" port="8090">
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting>
    </con:settings>
    <con:properties/>
    <con:mockOperation id="8dd03613-b7aa-4222-8fed-ad70a15e3e6d" interface="MarketProcessesSoapBinding" name="RequestEndOfSupply" operation="RequestEndOfSupply">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);
StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}
WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	double randomNbr = Math.random();
	if (randomNbr &lt;= 0.5) {
		return "SecurityError";
	} else {
		return "SystemError";
	}
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="cc1f2d95-5cef-45c1-9765-f128d35257e8" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="0415d635-e5d4-406b-a85e-dba085782f7c" name="SecurityError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Security error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Security</urn:CodeGroup>
          <urn:Description>Authorization failed</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="5a30e7c9-7fcb-4d56-a3cb-cc29105a76a1" name="SystemError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Server</faultcode>
      <faultstring>System error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>System</urn:CodeGroup>
          <urn:Description>System error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="cc1f2d95-5cef-45c1-9765-f128d35257e8" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestEndOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="9210681a-8378-4458-bdbf-a286589f3e2c" interface="MarketProcessesSoapBinding" name="RequestStartOfSupply" operation="RequestStartOfSupply">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);
StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}
WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	double randomNbr = Math.random();
	if (randomNbr &lt;= 0.5) {
		return "SecurityError";
	} else {
		return "SystemError";
	}
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="67946208-a254-4353-a94b-2c4580f8b425" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="ad0f8967-d109-403f-a9fc-4ed105be8922" name="SecurityError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Security error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Security</urn:CodeGroup>
          <urn:Description>Authorization failed</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="2885a9cc-d401-4a8d-b02f-7b2bd967248f" name="SystemError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Server</faultcode>
      <faultstring>System error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>System</urn:CodeGroup>
          <urn:Description>System error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="67946208-a254-4353-a94b-2c4580f8b425" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestStartOfSupply" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="29b54aa8-e0fa-4e49-88fa-7ada88bafac6" interface="MarketProcessesSoapBinding" name="RequestUpdateCustomerInformation" operation="RequestUpdateCustomerInformation">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);
StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}
WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	double randomNbr = Math.random();
	if (randomNbr &lt;= 0.5) {
		return "SecurityError";
	} else {
		return "SystemError";
	}
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="8ae22c40-0803-44c6-89de-b74ea99a724a" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="1e05ef86-705b-4e4c-bc6a-1f9769c81114" name="SecurityError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Security error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Security</urn:CodeGroup>
          <urn:Description>Authorization failed</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="7db564e8-5bb9-49f2-92b8-86a45838dd5e" name="SystemError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Server</faultcode>
      <faultstring>System error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>System</urn:CodeGroup>
          <urn:Description>System error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="8ae22c40-0803-44c6-89de-b74ea99a724a" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateCustomerInformation" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="e233973f-b6ff-427a-8db5-753becc3f84e" interface="MarketProcessesSoapBinding" name="RequestUpdateMasterDataMeteringPoint" operation="RequestUpdateMasterDataMeteringPoint">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);
StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}
WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	double randomNbr = Math.random();
	if (randomNbr &lt;= 0.5) {
		return "SecurityError";
	} else {
		return "SystemError";
	}
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="57422843-161e-4998-8846-cd557ad2d7f9" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="3ef2c9b5-6229-4107-aa61-ad2ad109c445" name="SecurityError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Security error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Security</urn:CodeGroup>
          <urn:Description>Authorization failed</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="1b228e10-1a92-4f9e-9d28-f1c1acad1fa5" name="SystemError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Server</faultcode>
      <faultstring>System error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>System</urn:CodeGroup>
          <urn:Description>System error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="57422843-161e-4998-8846-cd557ad2d7f9" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="RequestUpdateMasterDataMeteringPoint" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
    <con:mockOperation id="2a1bfc87-eec5-450e-8238-c72b48af9274" interface="MarketProcessesSoapBinding" name="UpdateThirdPartyAccess" operation="UpdateThirdPartyAccess">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>import com.eviware.soapui.impl.wsdl.mock.WsdlMockOperation
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRequest
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunContext
import com.eviware.soapui.impl.wsdl.mock.WsdlMockRunner
import com.eviware.soapui.impl.wsdl.mock.WsdlMockService
import com.eviware.soapui.impl.wsdl.panels.mockoperation.WsdlMockRequestMessageExchange
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlContext
import com.eviware.soapui.impl.wsdl.support.wsdl.WsdlValidator
import com.eviware.soapui.model.testsuite.AssertionError
import org.apache.xmlbeans.impl.soap.SOAPBody
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import com.eviware.soapui.support.types.*

WsdlContext wsdlContext = ((WsdlMockService)context.getMockService()).getMockedInterfaces()[0].getDefinitionContext();
WsdlValidator validator = new WsdlValidator(wsdlContext);
String soapAction = mockRequest.getSoapAction();
log.info(context.getMockService().toString() + "::" +soapAction);
StringToStringsMap headers = mockRequest.getRequestHeaders();
String contentType = headers.get("Content-Type");
if (contentType == null || !contentType.toLowerCase().contains("utf-8")) {
   context.setProperty("contentType", contentType);
   return "EncodingError";
}
WsdlMockOperation mockOperation = context.getMockService().getMockOperationByName(soapAction);
WsdlMockRequestMessageExchange messageExchange = new WsdlMockRequestMessageExchange(mockRequest, mockOperation);
AssertionError[] errors = validator.assertRequest(messageExchange, false);
if (errors.size() > 0) {
	String errorString = Arrays.toString(errors.collect());
	int stringLength = errorString.length() > 1000 ? 1000 : errorString.length();
	context.setProperty("errors", errorString.substring(0,stringLength));
	return "ValidationError";
} else {
	double randomNbr = Math.random();
	if (randomNbr &lt;= 0.5) {
		return "SecurityError";
	} else {
		return "SystemError";
	}
}</con:dispatchPath>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="69f0926f-0f72-40ba-97c8-9f7c9ad5c7ce" name="ValidationError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="5d862a6e-cee7-4737-b77e-87a33a41ffb3" name="SecurityError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Security error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Security</urn:CodeGroup>
          <urn:Description>Authorization failed</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="187a89cc-a660-4f0f-aa3a-7e93f5d4c3ff" name="SystemError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Server</faultcode>
      <faultstring>System error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>System</urn:CodeGroup>
          <urn:Description>System error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:response encoding="UTF-8" httpResponseStatus="500" id="69f0926f-0f72-40ba-97c8-9f7c9ad5c7ce" name="EncodingError" outgoingWss="SignBody">
        <con:settings/>
        <con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent>
        <con:wsaConfig action="UpdateThirdPartyAccess" mustUnderstand="NONE" version="200508"/>
      </con:response>
      <con:dispatchConfig/>
    </con:mockOperation>
  <con:mockOperation name="RejectStartOfSupply" id="80a53f18-9677-446c-8a1a-c83fe5c6e082" interface="MarketProcessesSoapBinding" operation="RejectStartOfSupply"><con:settings/><con:defaultResponse>ValidationError</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="ValidationError" id="7881f896-272d-4839-858b-53f77d392964" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>XSD validation error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>XSD</urn:CodeGroup>
          <urn:Description>XSD validation error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>${errors}</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/></con:response><con:response name="SecurityError" id="7881f896-272d-4839-858b-53f77d392964" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Security error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Security</urn:CodeGroup>
          <urn:Description>Authorization failed</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/></con:response><con:response name="SystemError" id="7881f896-272d-4839-858b-53f77d392964" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Server</faultcode>
      <faultstring>System error</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>System</urn:CodeGroup>
          <urn:Description>System error</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/></con:response><con:response name="EncodingError" id="7881f896-272d-4839-858b-53f77d392964" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:no:elhub:emif:wsdl:common:v2">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid Encoding</faultstring>
      <detail>
        <urn:ElhubSOAPFault>
          <urn:CodeGroup>Other</urn:CodeGroup>
          <urn:Description>Invalid encoding</urn:Description>
          <urn:ExceptionDateTime>${=javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(GregorianCalendar.getInstance())}</urn:ExceptionDateTime>
           <urn:FaultText>Message must be utf-8 encoded. Specified encoding: ${contentType} is invalid</urn:FaultText>
        </urn:ElhubSOAPFault>
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="RejectStartOfSupply"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService>
  <con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:endpoint incomingWss="Incoming" mode="COMPLEMENT" outgoingWss="SignBody">http://localhost:8080/WebService/services/MarketProcesses</con:endpoint>
    <con:endpoint incomingWss="Incoming" mode="COMPLEMENT" outgoingWss="SignBody">http://localhost:8090/WebService/services/MarketProcesses</con:endpoint>
    <con:endpoint incomingWss="Incoming" mode="COMPLEMENT" outgoingWss="SignBody" wssTimeToLive="" wssType="">http://requestb.in/1fpnt161</con:endpoint>
  <con:endpoint mode="COMPLEMENT" outgoingWss="SignBody" incomingWss="Incoming">http://localhost:1234/WebService/services/MarketProcesses</con:endpoint></con:endpointStrategy>
  <con:properties/>
  <con:wssContainer>
    <con:crypto>
      <con:source>${projectDir}/truststore.jks</con:source>
      <con:password>test</con:password>
      <con:type>TRUSTSTORE</con:type>
    </con:crypto>
    <con:crypto>
      <con:source>${projectDir}/keystore.jks</con:source>
      <con:password>test</con:password>
      <con:type>KEYSTORE</con:type>
    </con:crypto>
    <con:incoming>
      <con:name>Incoming</con:name>
      <con:decryptCrypto>keystore.jks</con:decryptCrypto>
      <con:signatureCrypto>keystore.jks</con:signatureCrypto>
      <con:decryptPassword>test</con:decryptPassword>
    </con:incoming>
    <con:outgoing>
      <con:name>SignBody</con:name>
      <con:entry type="Timestamp">
        <con:configuration>
          <timeToLive>60</timeToLive>
          <strictTimestamp>true</strictTimestamp>
        </con:configuration>
      </con:entry>
      <con:entry password="test" type="Signature" username="elhub test">
        <con:configuration>
          <crypto>keystore.jks</crypto>
          <keyIdentifierType>1</keyIdentifierType>
          <signatureAlgorithm/>
          <signatureCanonicalization/>
          <useSingleCert>true</useSingleCert>
          <digestAlgorithm/>
          <customTokenValueType/>
          <customTokenId/>
          <signaturePart>&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="id" value=""/>
  &lt;con:entry key="name" value="Timestamp"/>
  &lt;con:entry key="namespace" value="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"/>
&lt;/xml-fragment></signaturePart>
          <signaturePart>&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="id" value=""/>
  &lt;con:entry key="name" value="Body"/>
  &lt;con:entry key="namespace" value="http://schemas.xmlsoap.org/soap/envelope/"/>
&lt;/xml-fragment></signaturePart>
        </con:configuration>
      </con:entry>
    </con:outgoing>
  </con:wssContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>
